[
  {
    "objectID": "posts/p17.html",
    "href": "posts/p17.html",
    "title": "Presidential Elections 17th",
    "section": "",
    "text": "17th_2007\n\n# =============================================================================\n# 17대 대통령선거 데이터 전처리 함수들\n# =============================================================================\n\nimport pandas as pd\nimport re\nimport requests\nimport tempfile\nimport os\n\ndef convert_github_url_to_raw(github_url):\n    \"\"\"\n    깃허브 blob URL을 raw URL로 변환\n\n    Parameters:\n    -----------\n    github_url : 깃허브 파일 URL\n\n    Returns:\n    --------\n    raw URL (pandas가 직접 읽을 수 있는 형태)\n    \"\"\"\n    if '/blob/' in github_url:\n        return github_url.replace('/blob/', '/raw/')\n    return github_url\n\n\ndef process_17th_single_file(file_path, region_name):\n    \"\"\"\n    17대 대선 개별 파일 전처리 함수\n\n    엑셀 파일 구조:\n    - 0행: 헤더 첫 번째 줄\n    - 1행: 헤더 두 번째 줄\n    - 2행: 헤더 세 번째 줄\n    - 3행부터: 실제 데이터\n\n    Parameters:\n    -----------\n    file_path : 파일 경로 (로컬 파일 또는 URL)\n    region_name : 해당 파일의 지역명 (시도명)\n\n    Returns:\n    --------\n    전처리된 선거 데이터 (pandas DataFrame)\n    \"\"\"\n\n    # ================================\n    # 1. 파일 로드\n    # ================================\n    if file_path.startswith(('http://', 'https://')):\n        # URL인 경우\n        raw_url = convert_github_url_to_raw(file_path)\n        df_all = pd.read_excel(raw_url, header=None)\n    else:\n        # 로컬 파일인 경우\n        df_all = pd.read_excel(file_path, header=None)\n\n    # ================================\n    # 2. 헤더 구성 (0~2행 병합)\n    # ================================\n    header_row_1 = df_all.iloc[0].fillna(\"\")  # 첫 번째 헤더 행\n    header_row_2 = df_all.iloc[1].fillna(\"\")  # 두 번째 헤더 행\n    header_row_3 = df_all.iloc[2].fillna(\"\")  # 세 번째 헤더 행\n\n    # 3개 헤더 행을 \"_\"로 연결하여 통합 헤더 생성\n    combined_headers = (\n        header_row_1.astype(str) + \"_\" +\n        header_row_2.astype(str) + \"_\" +\n        header_row_3.astype(str)\n    )\n\n    # ================================\n    # 3. 실제 데이터 추출 (3행부터)\n    # ================================\n    df_data = df_all.iloc[3:].copy()\n    df_data.columns = combined_headers\n\n    # ================================\n    # 4. 합계 행 필터링\n    # ================================\n    dong_column = [col for col in df_data.columns if \"읍면동명\" in col][0]\n    filter_mask = df_data[dong_column].astype(str).str.contains(\"합계\", na=False)\n    df_filtered = df_data[filter_mask].copy()\n\n    # ================================\n    # 5. 수치형 컬럼 정리\n    # ================================\n    numeric_columns = df_filtered.columns[3:]\n\n    for col in numeric_columns:\n        df_filtered[col] = (\n            df_filtered[col]\n            .astype(str)\n            .fillna(\"0\")\n            .str.replace(\",\", \"\")\n            .str.strip()\n            .replace(\"nan\", \"0\")\n            .replace(\"\", \"0\")\n            .astype(int)\n        )\n\n    # ================================\n    # 6. 시도명 추가\n    # ================================\n    df_filtered.insert(0, \"시도\", region_name)\n\n    return df_filtered\n\n\ndef process_17th_presidential_election_batch(user, repo, folder=\"original/Presidential_Elections/17th_2007\"):\n    \"\"\"\n    17대 대선 전체 파일 자동 처리 및 병합 함수\n\n    GitHub API를 통해 17대 대선 폴더의 모든 .xls 파일을 자동으로\n    다운로드하고 전처리한 후 하나의 DataFrame으로 병합\n\n    Parameters:\n    -----------\n    user : GitHub 사용자명\n    repo : GitHub 저장소명\n    folder : 17대 대선 파일들이 있는 폴더 경로\n\n    Returns:\n    --------\n    병합된 전체 선거 데이터 (pandas DataFrame)\n\n    Example:\n    --------\n    df = process_17th_presidential_election_batch(\"username\", \"korean-elections\")\n    \"\"\"\n\n    print(f\"17대 대선 데이터 일괄 처리 시작\")\n    print(f\"저장소: {user}/{repo}\")\n    print(f\"폴더: {folder}\")\n\n    # ================================\n    # 1. GitHub API로 파일 목록 가져오기\n    # ================================\n    api_url = f\"https://api.github.com/repos/{user}/{repo}/contents/{folder}\"\n\n    try:\n        response = requests.get(api_url)\n        response.raise_for_status()\n        files = response.json()\n        print(f\"폴더에서 {len(files)}개 파일 발견\")\n    except Exception as e:\n        print(f\"API 요청 실패: {e}\")\n        return None\n\n    # ================================\n    # 2. 각 .xls 파일 처리\n    # ================================\n    processed_dfs = []\n    success_count = 0\n\n    for file_info in files:\n        file_name = file_info[\"name\"]\n\n        # .xls 파일만 처리\n        if not file_name.endswith(\".xls\"):\n            continue\n\n        # 파일명에서 지역명 추출 (예: \"01_17대선_투표구별개표자료_서울.xls\" → \"서울\")\n        match = re.match(r\"^(\\d+)_.*_([^_]+)\\.xls$\", file_name)\n        if not match:\n            print(f\"파일명 패턴 불일치, 무시: {file_name}\")\n            continue\n\n        number, region = match.group(1), match.group(2)\n\n        print(f\"처리 중: {file_name} (지역: {region})\")\n\n        # raw URL 생성\n        raw_url = f\"https://raw.githubusercontent.com/{user}/{repo}/main/{folder}/{file_name}\"\n\n        try:\n            # 임시 파일로 다운로드 후 처리\n            with tempfile.NamedTemporaryFile(delete=False, suffix=\".xls\") as tmp:\n                tmp.write(requests.get(raw_url).content)\n                tmp_path = tmp.name\n\n            # 개별 파일 전처리\n            df_region = process_17th_single_file(tmp_path, region)\n            processed_dfs.append(df_region)\n\n            # 임시 파일 삭제\n            os.remove(tmp_path)\n\n            success_count += 1\n            print(f\"  완료: {df_region.shape[0]}행 추가\")\n\n        except Exception as e:\n            print(f\"  오류 발생: {e}\")\n            continue\n\n    # ================================\n    # 3. 모든 DataFrame 병합\n    # ================================\n    if processed_dfs:\n        df_combined = pd.concat(processed_dfs, ignore_index=True)\n        print(f\"\")\n        print(f\"일괄 처리 완료:\")\n        print(f\"  - 성공: {success_count}개 파일\")\n        print(f\"  - 실패: {len([f for f in files if f['name'].endswith('.xls')]) - success_count}개 파일\")\n        print(f\"  - 최종 크기: {df_combined.shape[0]}행 x {df_combined.shape[1]}열\")\n        return df_combined\n    else:\n        print(\"처리된 파일이 없습니다.\")\n        return None\n\n\ndef add_17th_totals_by_region(df):\n    \"\"\"\n    17대 대선 데이터에 시도별 및 전국 합계 추가 함수\n\n    시도별 합계 행을 각 시도 데이터 위에 추가하고,\n    전국 합계 행을 맨 위에 추가\n\n    Parameters:\n    -----------\n    df : 17대 대선 원본 데이터 (DataFrame)\n\n    Returns:\n    --------\n    합계 행이 추가된 DataFrame\n\n    Example:\n    --------\n    df_with_totals = add_17th_totals_by_region(df_17th)\n    \"\"\"\n\n    print(\"시도별 및 전국 합계 행 추가 시작\")\n\n    df = df.copy()\n\n    # ================================\n    # 1. 시도별 합계 행 생성\n    # ================================\n    sido_order = df['시도'].drop_duplicates().tolist()\n    print(f\"처리할 시도 수: {len(sido_order)}\")\n\n    df_list = []\n\n    for sido in sido_order:\n        # 해당 시도 데이터\n        sido_data = df[df['시도'] == sido]\n\n        # 수치형 컬럼들의 합계 계산\n        numeric_cols = sido_data.select_dtypes(include='number').columns\n        agg_row = sido_data[numeric_cols].sum(numeric_only=True)\n        agg_row['시도'] = sido\n        agg_row['구시군명__'] = '합계'\n\n        # 누락된 열을 빈 문자열로 채움\n        for col in df.columns:\n            if col not in agg_row:\n                agg_row[col] = ''\n\n        # 열 순서 맞춤\n        agg_row = agg_row[df.columns.tolist()]\n\n        # 합계 행을 해당 시도 데이터 위에 추가\n        df_list.append(pd.concat([pd.DataFrame([agg_row]), sido_data], ignore_index=True))\n\n    df_with_sido_totals = pd.concat(df_list, ignore_index=True)\n\n    # ================================\n    # 2. 전국 합계 행 생성\n    # ================================\n    # 시도별 합계 행들만 추출하여 전국 합계 계산\n    sido_total_rows = df_with_sido_totals[df_with_sido_totals['구시군명__'] == '합계']\n    national_sum = sido_total_rows.select_dtypes(include='number').sum(numeric_only=True)\n    national_sum['시도'] = '전국'\n    national_sum['구시군명__'] = '합계'\n\n    # 누락된 열 처리\n    for col in df.columns:\n        if col not in national_sum:\n            national_sum[col] = ''\n    national_sum = national_sum[df.columns.tolist()]\n\n    # ================================\n    # 3. 전국 합계를 맨 위에 삽입\n    # ================================\n    final_df = pd.concat([pd.DataFrame([national_sum]), df_with_sido_totals], ignore_index=True)\n\n    print(f\"합계 행 추가 완료:\")\n    print(f\"  - 시도별 합계: {len(sido_order)}행\")\n    print(f\"  - 전국 합계: 1행\")\n    print(f\"  - 최종 크기: {final_df.shape[0]}행 x {final_df.shape[1]}열\")\n\n    return final_df\n\n\n# =============================================================================\n# 사용 예시\n# =============================================================================\n\n# 17대 대선 전체 파일 자동 처리\n# df_17th_raw = process_17th_presidential_election_batch(\"your_username\", \"korean-elections\")\n\n# 시도별 및 전국 합계 추가\n# df_17th_final = add_17th_totals_by_region(df_17th_raw)\n\n# 결과 확인\n# print(df_17th_final.head(10))\n# print(\"전국 합계:\", df_17th_final[df_17th_final['시도'] == '전국'].shape[0], \"행\")\n# print(\"시도별 데이터:\", df_17th_final['시도'].value_counts())\n\n\n# 17대 대선 전체 파일 자동 처리\ndf_17th_raw = process_17th_presidential_election_batch(\"sw1kwon\", \"korean-elections\")\n\n# 시도별 및 전국 합계 추가\ndf_17th = add_17th_totals_by_region(df_17th_raw)\n\n17대 대선 데이터 일괄 처리 시작\n저장소: sw1kwon/korean-elections\n폴더: original/Presidential_Elections/17th_2007\n폴더에서 16개 파일 발견\n처리 중: 01_17대선_투표구별개표자료_서울.xls (지역: 서울)\n  완료: 25행 추가\n처리 중: 02_17대선_투표구별개표자료_부산.xls (지역: 부산)\n  완료: 16행 추가\n처리 중: 03_17대선_투표구별개표자료_대구.xls (지역: 대구)\n  완료: 8행 추가\n처리 중: 04_17대선_투표구별개표자료_인천.xls (지역: 인천)\n  완료: 10행 추가\n처리 중: 05_17대선_투표구별개표자료_광주.xls (지역: 광주)\n  완료: 5행 추가\n처리 중: 06_17대선_투표구별개표자료_대전.xls (지역: 대전)\n  완료: 5행 추가\n처리 중: 07_17대선_투표구별개표자료_울산.xls (지역: 울산)\n  완료: 5행 추가\n처리 중: 08_17대선_투표구별개표자료_경기.xls (지역: 경기)\n  완료: 44행 추가\n처리 중: 09_17대선_투표구별개표자료_강원.xls (지역: 강원)\n  완료: 18행 추가\n처리 중: 10_17대선_투표구별개표자료_충북.xls (지역: 충북)\n  완료: 13행 추가\n처리 중: 11_17대선_투표구별개표자료_충남.xls (지역: 충남)\n  완료: 16행 추가\n처리 중: 12_17대선_투표구별개표자료_전북.xls (지역: 전북)\n  완료: 15행 추가\n처리 중: 13_17대선_투표구별개표자료_전남.xls (지역: 전남)\n  완료: 22행 추가\n처리 중: 14_17대선_투표구별개표자료_경북.xls (지역: 경북)\n  완료: 24행 추가\n처리 중: 15_17대선_투표구별개표자료_경남.xls (지역: 경남)\n  완료: 20행 추가\n처리 중: 16_17대선_투표구별개표자료_제주.xls (지역: 제주)\n  완료: 2행 추가\n\n일괄 처리 완료:\n  - 성공: 16개 파일\n  - 실패: 0개 파일\n  - 최종 크기: 248행 x 20열\n시도별 및 전국 합계 행 추가 시작\n처리할 시도 수: 16\n합계 행 추가 완료:\n  - 시도별 합계: 16행\n  - 전국 합계: 1행\n  - 최종 크기: 265행 x 20열\n\n\n\ndf_17th\n\n\n  \n    \n\n\n\n\n\n\n시도\n구시군명__\n읍면동명__\n투표구명__\n선거인수__\n투표용지\\n교부수__\n투표수__\n후보자별 득표상황_대통합민주신당_정동영\n_한나라당_이명박\n_민주노동당_권영길\n_민주당_이인제\n_창조한국당_문국현\n_참주인연합_정근모\n_경제공화당_허경영\n_새시대참사람연합_전관\n_한국사회당_금민\n_무소속_이회창\n_계_\n무효\\n투표수__\n기권수__\n\n\n\n\n0\n전국\n합계\n\n\n37653518\n23733396\n23732854\n6174681\n11492389\n712121\n160708\n1375498\n15380\n96756\n7161\n18223\n3559963\n23612880\n119974\n13920664\n\n\n1\n서울\n합계\n\n\n8051696\n5066136\n5066022\n1237812\n2689162\n116344\n23214\n358781\n3013\n22405\n911\n3501\n596226\n5051369\n14653\n2985674\n\n\n2\n서울\n종로구\n합계\nNaN\n133946\n85483\n85480\n21515\n45172\n1889\n398\n5722\n56\n331\n13\n77\n9984\n85157\n323\n48466\n\n\n3\n서울\n중구\n합계\nNaN\n106837\n66496\n66496\n17299\n35335\n1387\n328\n4324\n33\n240\n9\n52\n7278\n66285\n211\n40341\n\n\n4\n서울\n용산구\n합계\nNaN\n190910\n117054\n117051\n25967\n66096\n2358\n532\n7544\n78\n486\n12\n77\n13554\n116704\n347\n73859\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n260\n경남\n거창군\n합계\nNaN\n50823\n34593\n34594\n3637\n19863\n1708\n127\n1345\n26\n128\n20\n45\n6982\n33881\n713\n16229\n\n\n261\n경남\n합천군\n합계\nNaN\n45959\n31742\n31741\n2815\n18867\n1626\n122\n927\n26\n109\n17\n62\n6339\n30910\n831\n14218\n\n\n262\n제주\n합계\n\n\n414022\n252132\n252111\n81570\n96495\n10954\n1674\n19421\n152\n1273\n144\n344\n37495\n249522\n2589\n161911\n\n\n263\n제주\n제주시\n합계\nNaN\n296325\n181325\n181304\n56798\n70297\n7059\n1124\n15142\n114\n929\n90\n227\n27824\n179604\n1700\n115021\n\n\n264\n제주\n서귀포시\n합계\nNaN\n117697\n70807\n70807\n24772\n26198\n3895\n550\n4279\n38\n344\n54\n117\n9671\n69918\n889\n46890\n\n\n\n\n265 rows × 20 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n    \n      \n\n\n    \n        \n    \n\n      \n\n\n\n      \n    \n\n  \n    \n    \n\n  \n    \n  \n    \n    \n  \n\n    \n  \n\n\n\ndf_17th.columns.tolist()\n\n['시도',\n '구시군명__',\n '읍면동명__',\n '투표구명__',\n '선거인수__',\n '투표용지\\n교부수__',\n '투표수__',\n '후보자별 득표상황_대통합민주신당_정동영',\n '_한나라당_이명박',\n '_민주노동당_권영길',\n '_민주당_이인제',\n '_창조한국당_문국현',\n '_참주인연합_정근모',\n '_경제공화당_허경영',\n '_새시대참사람연합_전관',\n '_한국사회당_금민',\n '_무소속_이회창',\n '_계_',\n '무효\\n투표수__',\n '기권수__']\n\n\n\nrename_dict17 = {\n    '구시군명__': '구시군',\n    '선거인수__': '선거인수',\n    '투표수__': '투표수',\n    '후보자별 득표상황_대통합민주신당_정동영': '득표수_1_대통합민주신당_정동영',\n    '_한나라당_이명박': '득표수_2_한나라당_이명박',\n    '_민주노동당_권영길': '득표수_3_민주노동당_권영길',\n    '_민주당_이인제': '득표수_4_민주당_이인제',\n    '_창조한국당_문국현': '득표수_6_창조한국당_문국현',\n    '_참주인연합_정근모': '득표수_7_참주인연합_정근모',\n    '_경제공화당_허경영': '득표수_8_경제공화당_허경영',\n    '_새시대참사람연합_전관': '득표수_9_새시대참사람연합_전관',\n    '_한국사회당_금민': '득표수_10_한국사회당_금민',\n    '_무소속_이회창': '득표수_11_무소속_이회창',\n    '_계_': '득표수_계',\n    '무효\\n투표수__': '무효투표수',\n    '기권수__': '기권수'\n}\n\n\ndf_17th.rename(columns=rename_dict17).drop(columns=['읍면동명__', '투표구명__', '투표용지\\n교부수__'])\n\n\n  \n    \n\n\n\n\n\n\n시도\n구시군\n선거인수\n투표수\n득표수_1_대통합민주신당_정동영\n득표수_2_한나라당_이명박\n득표수_3_민주노동당_권영길\n득표수_4_민주당_이인제\n득표수_6_창조한국당_문국현\n득표수_7_참주인연합_정근모\n득표수_8_경제공화당_허경영\n득표수_9_새시대참사람연합_전관\n득표수_10_한국사회당_금민\n득표수_11_무소속_이회창\n득표수_계\n무효투표수\n기권수\n\n\n\n\n0\n전국\n합계\n37653518\n23732854\n6174681\n11492389\n712121\n160708\n1375498\n15380\n96756\n7161\n18223\n3559963\n23612880\n119974\n13920664\n\n\n1\n서울\n합계\n8051696\n5066022\n1237812\n2689162\n116344\n23214\n358781\n3013\n22405\n911\n3501\n596226\n5051369\n14653\n2985674\n\n\n2\n서울\n종로구\n133946\n85480\n21515\n45172\n1889\n398\n5722\n56\n331\n13\n77\n9984\n85157\n323\n48466\n\n\n3\n서울\n중구\n106837\n66496\n17299\n35335\n1387\n328\n4324\n33\n240\n9\n52\n7278\n66285\n211\n40341\n\n\n4\n서울\n용산구\n190910\n117051\n25967\n66096\n2358\n532\n7544\n78\n486\n12\n77\n13554\n116704\n347\n73859\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n260\n경남\n거창군\n50823\n34594\n3637\n19863\n1708\n127\n1345\n26\n128\n20\n45\n6982\n33881\n713\n16229\n\n\n261\n경남\n합천군\n45959\n31741\n2815\n18867\n1626\n122\n927\n26\n109\n17\n62\n6339\n30910\n831\n14218\n\n\n262\n제주\n합계\n414022\n252111\n81570\n96495\n10954\n1674\n19421\n152\n1273\n144\n344\n37495\n249522\n2589\n161911\n\n\n263\n제주\n제주시\n296325\n181304\n56798\n70297\n7059\n1124\n15142\n114\n929\n90\n227\n27824\n179604\n1700\n115021\n\n\n264\n제주\n서귀포시\n117697\n70807\n24772\n26198\n3895\n550\n4279\n38\n344\n54\n117\n9671\n69918\n889\n46890\n\n\n\n\n265 rows × 17 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n    \n      \n\n\n    \n        \n    \n\n      \n\n\n\n      \n    \n\n    \n  \n\n\n\ndf_17th = df_17th.rename(columns=rename_dict17).drop(columns=['읍면동명__', '투표구명__', '투표용지\\n교부수__'])\n\n\ndf_17th[df_17th['구시군'] == '합계']\n\n\n  \n    \n\n\n\n\n\n\n시도\n구시군\n선거인수\n투표수\n득표수_1_대통합민주신당_정동영\n득표수_2_한나라당_이명박\n득표수_3_민주노동당_권영길\n득표수_4_민주당_이인제\n득표수_6_창조한국당_문국현\n득표수_7_참주인연합_정근모\n득표수_8_경제공화당_허경영\n득표수_9_새시대참사람연합_전관\n득표수_10_한국사회당_금민\n득표수_11_무소속_이회창\n득표수_계\n무효투표수\n기권수\n\n\n\n\n0\n전국\n합계\n37653518\n23732854\n6174681\n11492389\n712121\n160708\n1375498\n15380\n96756\n7161\n18223\n3559963\n23612880\n119974\n13920664\n\n\n1\n서울\n합계\n8051696\n5066022\n1237812\n2689162\n116344\n23214\n358781\n3013\n22405\n911\n3501\n596226\n5051369\n14653\n2985674\n\n\n27\n부산\n합계\n2843063\n1765231\n236708\n1018715\n48901\n4599\n94285\n770\n7351\n406\n1198\n346319\n1759252\n5979\n1077832\n\n\n44\n대구\n합계\n1896866\n1267969\n75932\n876719\n25777\n1847\n50514\n367\n3375\n221\n727\n228199\n1263678\n4291\n628897\n\n\n53\n인천\n합계\n2005874\n1210220\n286565\n593283\n42069\n7612\n84814\n797\n5769\n323\n1068\n183057\n1205357\n4863\n795654\n\n\n64\n광주\n합계\n1031333\n663338\n527588\n56875\n13597\n7118\n31524\n398\n1547\n96\n289\n22520\n661552\n1786\n367995\n\n\n70\n대전\n합계\n1098977\n680264\n159700\n246008\n17207\n7223\n48143\n467\n2356\n204\n683\n195957\n677948\n2316\n418713\n\n\n76\n울산\n합계\n806423\n521216\n70736\n279891\n43607\n1884\n28605\n271\n2099\n121\n467\n90905\n518586\n2630\n285207\n\n\n82\n경기\n합계\n8222124\n5035641\n1181936\n2603443\n144830\n30513\n354492\n3378\n23554\n1312\n3207\n670742\n5017407\n18234\n3186483\n\n\n127\n강원\n합계\n1164655\n728895\n136668\n376004\n28129\n6085\n42552\n615\n5063\n436\n849\n127102\n723503\n5392\n435760\n\n\n146\n충북\n합계\n1146102\n702593\n165637\n289499\n25285\n7965\n39884\n561\n3435\n321\n759\n162750\n696096\n6497\n443509\n\n\n160\n충남\n합계\n1532751\n924039\n192999\n313693\n32132\n22592\n43383\n934\n3814\n568\n1131\n304259\n915505\n8534\n608712\n\n\n177\n전북\n합계\n1425056\n957575\n777236\n86149\n18139\n6550\n26573\n590\n1777\n270\n538\n34630\n952452\n5123\n467481\n\n\n193\n전남\n합계\n1500831\n971461\n757309\n88834\n23178\n23074\n31289\n938\n2179\n517\n743\n34790\n962851\n8610\n529370\n\n\n216\n경북\n합계\n2097394\n1437209\n96822\n1033957\n39327\n3823\n47345\n819\n4696\n699\n1458\n195526\n1424472\n12737\n660185\n\n\n241\n경남\n합계\n2416351\n1549070\n189463\n843662\n82645\n4935\n73893\n1310\n6063\n612\n1261\n329486\n1533330\n15740\n867281\n\n\n262\n제주\n합계\n414022\n252111\n81570\n96495\n10954\n1674\n19421\n152\n1273\n144\n344\n37495\n249522\n2589\n161911\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n    \n      \n\n\n    \n        \n    \n\n      \n\n\n\n      \n    \n\n    \n  \n\n\n\ndf_17th.to_csv(\"temp1_president_17.csv\", index=False, encoding=\"utf-8-sig\")"
  },
  {
    "objectID": "posts/p14_16.html",
    "href": "posts/p14_16.html",
    "title": "Presidential Elections 14th ~ 16th",
    "section": "",
    "text": "# =============================================================================\n# 16대 대통령선거 데이터 전처리 함수\n# =============================================================================\n\nimport pandas as pd\n\ndef convert_github_url_to_raw(github_url):\n    \"\"\"\n    깃허브 blob URL을 raw URL로 변환\n\n    Parameters:\n    -----------\n    github_url : 깃허브 파일 URL\n\n    Returns:\n    --------\n    raw URL (pandas가 직접 읽을 수 있는 형태)\n\n    Example:\n    --------\n    blob_url = \"https://github.com/user/repo/blob/main/file.xls\"\n    raw_url = convert_github_url_to_raw(blob_url)\n    # \"https://github.com/user/repo/raw/main/file.xls\"\n    \"\"\"\n    if '/blob/' in github_url:\n        return github_url.replace('/blob/', '/raw/')\n    return github_url\n\n\ndef process_16th_presidential_election(file_path):\n    \"\"\"\n    16대 대통령선거 데이터 전처리 함수\n\n    엑셀 파일 구조:\n    - Sheet 0: 전국투표구별득표상황 (메인 데이터)\n    - Sheet 1: 위원회별부재자득표상황 (시도명 매핑용)\n\n    특별한 처리 로직:\n    1. 두 시트를 위원회명으로 병합하여 시도명 추가\n    2. 시도별 합계 행 자동 생성\n    3. 전국 합계 행 자동 생성 및 맨 위 배치\n    4. 위원회명에서 대괄호와 괄호 정리\n\n    Parameters:\n    -----------\n    file_path : 파일 경로 (로컬 파일, 깃허브 blob URL, 또는 raw URL)\n        - 로컬: \"./data/16대_선거결과.xls\"\n        - 깃허브 blob: \"https://github.com/user/repo/blob/main/파일.xls\" (자동 변환됨)\n        - 깃허브 raw: \"https://github.com/user/repo/raw/main/파일.xls\"\n\n    Returns:\n    --------\n    전처리된 선거 데이터 (pandas DataFrame, 전국/시도별 합계 포함)\n\n    Example:\n    --------\n    # 깃허브에서 불러오기 (blob URL 그대로 사용 - 자동 변환됨)\n    blob_url = \"https://github.com/user/repo/blob/main/16대/선거결과.xls\"\n    df = process_16th_presidential_election(blob_url)\n\n    # 로컬 파일 불러오기\n    df = process_16th_presidential_election(\"./data/16대_선거결과.xls\")\n    \"\"\"\n\n    # ================================\n    # 1. 파일 로드 (자동 감지)\n    # ================================\n    if file_path.startswith(('http://', 'https://')):\n        # URL인 경우 - blob URL이면 raw URL로 변환\n        raw_url = convert_github_url_to_raw(file_path)\n        print(f\"웹에서 파일 로드: {raw_url}\")\n        if raw_url != file_path:\n            print(f\"  (blob URL을 raw URL로 자동 변환)\")\n        xls = pd.ExcelFile(raw_url)\n    else:\n        # 로컬 파일인 경우\n        print(f\"로컬에서 파일 로드: {file_path}\")\n        xls = pd.ExcelFile(file_path)\n\n    # ================================\n    # 2. 두 시트 읽기\n    # ================================\n    df_main = xls.parse(0)      # Sheet 0: 전국투표구별득표상황\n    df_mapping = xls.parse(1)   # Sheet 1: 위원회별부재자득표상황 (시도명 매핑용)\n\n    print(f\"메인 데이터 크기: {df_main.shape}\")\n    print(f\"매핑 데이터 크기: {df_mapping.shape}\")\n    print(f\"메인 컬럼: {list(df_main.columns)}\")\n\n    # ================================\n    # 3. 합계 행 필터링\n    # ================================\n    # 메인 데이터에서 읍면동명이 '합계'인 행만 추출\n    df_main_filtered = df_main[df_main['읍면동명'] == '합계'].copy()\n\n    print(f\"합계 행 필터링 후 크기: {df_main_filtered.shape}\")\n\n    # ================================\n    # 4. 위원회명 정리 (대괄호 제거)\n    # ================================\n    # 위원회명에서 대괄호 [, ] 제거하여 새로운 컬럼 생성\n    df_main_filtered['위원회명_clean'] = (\n        df_main_filtered['위원회명']\n        .str.replace(r'[\\[\\]]', '', regex=True)  # 대괄호 제거\n    )\n\n    df_mapping['위원회명_clean'] = (\n        df_mapping['위원회명']\n        .astype(str)\n        .str.replace(r'[\\[\\]]', '', regex=True)  # 대괄호 제거\n    )\n\n    print(f\"위원회명 정리 완료\")\n\n    # ================================\n    # 5. 시도명 병합\n    # ================================\n    # 매핑 시트의 시도명 정보를 메인 데이터에 병합\n    df_merged = pd.merge(\n        df_main_filtered,\n        df_mapping[['시도명', '위원회명_clean']],  # 시도명과 정리된 위원회명만 가져옴\n        on='위원회명_clean',\n        how='left'  # 메인 데이터 기준으로 left join\n    )\n\n    print(f\"시도명 병합 후 크기: {df_merged.shape}\")\n\n    # ================================\n    # 6. 컬럼 정리 및 순서 재배열\n    # ================================\n    # 필요한 컬럼만 남기고 순서 재배열\n    exclude_cols = ['위원회명', '읍면동명', '투표구명']  # 제외할 컬럼들\n    ordered_cols = ['시도명', '위원회명_clean'] + [\n        col for col in df_merged.columns\n        if col not in ['시도명', '위원회명_clean'] + exclude_cols\n    ]\n    df_final = df_merged[ordered_cols]\n\n    print(f\"컬럼 정리 후: {len(df_final.columns)}개 컬럼\")\n\n    # ================================\n    # 7. 시도별 합계 행 생성\n    # ================================\n    # 시도명 원래 순서 보존\n    sido_order = df_final['시도명'].drop_duplicates().tolist()\n    print(f\"시도 개수: {len(sido_order)}\")\n\n    # 시도별로 수치형 컬럼들의 합계 계산\n    agg_df = (\n        df_final.groupby('시도명', sort=False)\n        .agg(lambda x: x.iloc[0] if x.name in ['시도명', '위원회명_clean']\n             else x.sum(numeric_only=True))\n        .reset_index()\n    )\n    agg_df['위원회명_clean'] = '합계'  # 합계 행 표시\n    agg_df = agg_df[df_final.columns.tolist()]  # 컬럼 순서 맞춤\n\n    # ================================\n    # 8. 시도별 합계 행을 각 시도 위에 삽입\n    # ================================\n    df_list = []\n    for sido in sido_order:\n        # 해당 시도의 데이터\n        sido_data = df_final[df_final['시도명'] == sido]\n        # 해당 시도의 합계 행\n        sido_total = agg_df[agg_df['시도명'] == sido]\n        # 합계 행을 위에 두고 이어 붙임\n        df_list.append(pd.concat([sido_total, sido_data], ignore_index=True))\n\n    df_with_sido_totals = pd.concat(df_list, ignore_index=True)\n\n    print(f\"시도별 합계 추가 후 크기: {df_with_sido_totals.shape}\")\n\n    # ================================\n    # 9. 전국 합계 행 생성\n    # ================================\n    # 시도별 합계 행들만 추출하여 전국 합계 계산\n    national_source_rows = df_with_sido_totals[\n        df_with_sido_totals['위원회명_clean'] == '합계'\n    ]\n\n    # 수치형 컬럼들의 합계 계산 (2번째 컬럼부터)\n    national_totals = national_source_rows.iloc[:, 2:].sum(numeric_only=True)\n    national_totals['시도명'] = '전국'\n    national_totals['위원회명_clean'] = '합계'\n    national_totals = national_totals[df_with_sido_totals.columns]  # 컬럼 순서 맞춤\n\n    # ================================\n    # 10. 전국 합계 행을 맨 위에 삽입\n    # ================================\n    df_final_with_national = pd.concat(\n        [pd.DataFrame([national_totals]), df_with_sido_totals],\n        ignore_index=True\n    )\n\n    print(f\"전국 합계 추가 후 크기: {df_final_with_national.shape}\")\n\n    # ================================\n    # 11. 위원회명 최종 정리 (괄호 제거)\n    # ================================\n    # 위원회명에서 괄호와 그 안의 내용 제거\n    df_final_with_national['위원회명_clean'] = (\n        df_final_with_national['위원회명_clean']\n        .str.replace(r\"\\(.*\\)\", \"\", regex=True)  # (내용) 형태 제거\n        .str.strip()  # 앞뒤 공백 제거\n    )\n\n    # ================================\n    # 12. 결과 반환\n    # ================================\n    print(f\"최종 데이터 크기: {df_final_with_national.shape}\")\n    print(\"전처리 완료!\")\n    print(f\"  - 전국 합계: 1행\")\n    print(f\"  - 시도별 합계: {len(sido_order)}행\")\n    print(f\"  - 위원회별 상세: {df_final_with_national.shape[0] - 1 - len(sido_order)}행\")\n\n    return df_final_with_national\n\n\n# =============================================================================\n# 사용 예시\n# =============================================================================\n\n# 깃허브 blob URL로 불러오는 경우 (자동으로 raw URL로 변환됨)\n# blob_url = \"https://github.com/~~/korean-elections/blob/main/original/Presidential_Elections/16th_2002/제16대 대통령선거 개표자료.xls\"\n# df_16th = process_16th_presidential_election(blob_url)\n\n# 로컬에서 불러오는 경우\n# df_16th = process_16th_presidential_election(\"./data/16대_대선결과.xls\")\n\n# 업로드된 파일 사용하는 경우\n# df_16th = process_16th_presidential_election(\"제16대 대통령선거 개표자료.xls\")\n\n# 결과 확인\n# print(df_16th.head(10))  # 상위 10행 확인\n# print(df_16th.columns.tolist())\n# print(df_16th['시도명'].value_counts())  # 시도별 행 개수 확인\n\n\n# 깃허브 blob URL로 불러오는 경우 (자동으로 raw URL로 변환됨)\nblob_url16 = \"https://github.com/sw1kwon/korean-elections/blob/main/original/Presidential_Elections/16th_2002/%EC%A0%9C16%EB%8C%80%20%EB%8C%80%ED%86%B5%EB%A0%B9%EC%84%A0%EA%B1%B0%20%EA%B0%9C%ED%91%9C%EC%9E%90%EB%A3%8C.xls\"\ndf_16th = process_16th_presidential_election(blob_url16)\n\n웹에서 파일 로드: https://github.com/sw1kwon/korean-elections/raw/main/original/Presidential_Elections/16th_2002/%EC%A0%9C16%EB%8C%80%20%EB%8C%80%ED%86%B5%EB%A0%B9%EC%84%A0%EA%B1%B0%20%EA%B0%9C%ED%91%9C%EC%9E%90%EB%A3%8C.xls\n  (blob URL을 raw URL로 자동 변환)\n메인 데이터 크기: (17479, 14)\n매핑 데이터 크기: (261, 13)\n메인 컬럼: ['위원회명', '읍면동명', '투표구명', '선거인수', '투표수', '이회창', '노무현', '이한동', '권영길', '김영규', '김길수', '유효투표수', '무표투표수', '기권수']\n합계 행 필터링 후 크기: (244, 14)\n위원회명 정리 완료\n시도명 병합 후 크기: (244, 16)\n컬럼 정리 후: 13개 컬럼\n시도 개수: 16\n시도별 합계 추가 후 크기: (260, 13)\n전국 합계 추가 후 크기: (261, 13)\n최종 데이터 크기: (261, 13)\n전처리 완료!\n  - 전국 합계: 1행\n  - 시도별 합계: 16행\n  - 위원회별 상세: 244행\n\n\n\ndf_16th\n\n\n  \n    \n\n\n\n\n\n\n시도명\n위원회명_clean\n선거인수\n투표수\n이회창\n노무현\n이한동\n권영길\n김영규\n김길수\n유효투표수\n무표투표수\n기권수\n\n\n\n\n0\n전국\n합계\n34991529\n24784963\n11443297\n12014277\n74027\n957148\n22063\n51104\n24561916\n223047\n10206566\n\n\n1\n서울\n합계\n7670682\n5475715\n2447376\n2792957\n12724\n179790\n4706\n6437\n5443990\n31725\n2194967\n\n\n2\n서울\n종로구\n140105\n99988\n45901\n49989\n304\n2995\n71\n121\n99381\n607\n40117\n\n\n3\n서울\n중구\n108936\n76499\n33712\n39876\n164\n2073\n66\n101\n75992\n507\n32437\n\n\n4\n서울\n용산구\n184276\n127810\n61349\n61437\n309\n3711\n108\n148\n127062\n748\n56466\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n256\n제주\n합계\n391151\n268227\n105744\n148423\n744\n8619\n288\n981\n264799\n3428\n122924\n\n\n257\n제주\n제주시\n198820\n136002\n55892\n73679\n315\n4609\n128\n250\n134873\n1129\n62818\n\n\n258\n제주\n북제주군\n74769\n51969\n20345\n28501\n168\n1474\n70\n316\n50874\n1095\n22800\n\n\n259\n제주\n서귀포시\n61099\n41151\n15077\n24026\n118\n1288\n30\n159\n40698\n453\n19948\n\n\n260\n제주\n남제주군\n56463\n39105\n14430\n22217\n143\n1248\n60\n256\n38354\n751\n17358\n\n\n\n\n261 rows × 13 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n    \n      \n\n\n    \n        \n    \n\n      \n\n\n\n      \n    \n\n  \n    \n    \n\n  \n    \n  \n    \n    \n  \n\n    \n  \n\n\n\ndf_16th.columns.tolist()\n\n['시도명',\n '위원회명_clean',\n '선거인수',\n '투표수',\n '이회창',\n '노무현',\n '이한동',\n '권영길',\n '김영규',\n '김길수',\n '유효투표수',\n '무표투표수',\n '기권수']\n\n\n\nrename_dict16 = {\n    '시도명_': '시도',\n    '위원회명_clean': '구시군',\n    '이회창': '득표수_1_한나라당_이회창',\n    '노무현': '득표수_2_새천년민주당_노무현',\n    '이한동': '득표수_3_하나로국민연합_이한동',\n    '권영길': '득표수_4_민주노동당_권영길',\n    '김영규': '득표수_5_사회당_김영규',\n    '김길수': '득표수_6_호국당_김길수',\n    '유효투표수': '득표수_계',\n    '무표투표수': '무효투표수'\n}\n\n\ndf_16th.rename(columns=rename_dict16)\n\n\n  \n    \n\n\n\n\n\n\n시도명\n구시군\n선거인수\n투표수\n득표수_1_한나라당_이회창\n득표수_2_새천년민주당_노무현\n득표수_3_하나로국민연합_이한동\n득표수_4_민주노동당_권영길\n득표수_5_사회당_김영규\n득표수_6_호국당_김길수\n득표수_계\n무효투표수\n기권수\n\n\n\n\n0\n전국\n합계\n34991529\n24784963\n11443297\n12014277\n74027\n957148\n22063\n51104\n24561916\n223047\n10206566\n\n\n1\n서울\n합계\n7670682\n5475715\n2447376\n2792957\n12724\n179790\n4706\n6437\n5443990\n31725\n2194967\n\n\n2\n서울\n종로구\n140105\n99988\n45901\n49989\n304\n2995\n71\n121\n99381\n607\n40117\n\n\n3\n서울\n중구\n108936\n76499\n33712\n39876\n164\n2073\n66\n101\n75992\n507\n32437\n\n\n4\n서울\n용산구\n184276\n127810\n61349\n61437\n309\n3711\n108\n148\n127062\n748\n56466\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n256\n제주\n합계\n391151\n268227\n105744\n148423\n744\n8619\n288\n981\n264799\n3428\n122924\n\n\n257\n제주\n제주시\n198820\n136002\n55892\n73679\n315\n4609\n128\n250\n134873\n1129\n62818\n\n\n258\n제주\n북제주군\n74769\n51969\n20345\n28501\n168\n1474\n70\n316\n50874\n1095\n22800\n\n\n259\n제주\n서귀포시\n61099\n41151\n15077\n24026\n118\n1288\n30\n159\n40698\n453\n19948\n\n\n260\n제주\n남제주군\n56463\n39105\n14430\n22217\n143\n1248\n60\n256\n38354\n751\n17358\n\n\n\n\n261 rows × 13 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n    \n      \n\n\n    \n        \n    \n\n      \n\n\n\n      \n    \n\n    \n  \n\n\n\ndf_16th = df_16th.rename(columns=rename_dict16)\n\n\ndf_16th[df_16th['구시군'] == '합계']\n\n\n  \n    \n\n\n\n\n\n\n시도명\n구시군\n선거인수\n투표수\n득표수_1_한나라당_이회창\n득표수_2_새천년민주당_노무현\n득표수_3_하나로국민연합_이한동\n득표수_4_민주노동당_권영길\n득표수_5_사회당_김영규\n득표수_6_호국당_김길수\n득표수_계\n무효투표수\n기권수\n\n\n\n\n0\n전국\n합계\n34991529\n24784963\n11443297\n12014277\n74027\n957148\n22063\n51104\n24561916\n223047\n10206566\n\n\n1\n서울\n합계\n7670682\n5475715\n2447376\n2792957\n12724\n179790\n4706\n6437\n5443990\n31725\n2194967\n\n\n27\n부산\n합계\n2786142\n1983492\n1314274\n587946\n2148\n61281\n1380\n2064\n1969093\n14399\n802650\n\n\n44\n대구\n합계\n1827162\n1299968\n1002164\n240745\n1699\n42174\n810\n1317\n1288909\n11059\n527194\n\n\n53\n인천\n합계\n1824905\n1236447\n547205\n611766\n3600\n61655\n1612\n1978\n1227816\n8631\n588458\n\n\n64\n광주\n합계\n967222\n755398\n26869\n715182\n803\n7243\n305\n1014\n751416\n3982\n211824\n\n\n70\n대전\n합계\n998541\n675029\n266760\n369046\n2157\n29728\n747\n1408\n669846\n5183\n323512\n\n\n76\n울산\n합계\n729645\n510496\n267737\n178584\n997\n57786\n502\n716\n506322\n4174\n219149\n\n\n82\n경기\n합계\n6944934\n4831412\n2120191\n2430193\n26072\n209346\n4119\n8085\n4798006\n33406\n2113522\n\n\n123\n강원\n합계\n1131168\n773560\n400405\n316722\n3406\n38722\n969\n2713\n762937\n10623\n357608\n\n\n142\n충북\n합계\n1079642\n734385\n311044\n365623\n3205\n41731\n949\n2610\n725162\n9223\n345257\n\n\n155\n충남\n합계\n1398762\n922882\n375110\n474531\n4973\n49579\n1303\n4322\n909818\n13064\n475880\n\n\n171\n전북\n합계\n1427135\n1064744\n65334\n966053\n2505\n14904\n817\n5187\n1054800\n9944\n362391\n\n\n187\n전남\n합계\n1521109\n1161511\n53074\n1070506\n2830\n12215\n988\n6707\n1146320\n15191\n359598\n\n\n210\n경북\n합계\n2044285\n1463664\n1056446\n311358\n3332\n62522\n1344\n2936\n1437938\n25726\n580621\n\n\n235\n경남\n합계\n2249044\n1628033\n1083564\n434642\n2832\n79853\n1224\n2629\n1604744\n23289\n621011\n\n\n256\n제주\n합계\n391151\n268227\n105744\n148423\n744\n8619\n288\n981\n264799\n3428\n122924\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n    \n      \n\n\n    \n        \n    \n\n      \n\n\n\n      \n    \n\n    \n  \n\n\n\ndf_16th.to_csv(\"temp1_president_16.csv\", index=False, encoding=\"utf-8-sig\")"
  },
  {
    "objectID": "posts/p14_16.html#참고",
    "href": "posts/p14_16.html#참고",
    "title": "Presidential Elections 14th ~ 16th",
    "section": "참고",
    "text": "참고\n\n나무위키 및 위키백과에서는 선거인 수가 29,422,658로 나와서 데이터 상으로 한번 더 확인\n다른 선거는 이렇게 일치하는지 전부 자세히 확인은 아직 못함\n\n가끔 확인할 때마다 다른 선거들은 일치하기는 했음\n\n\n\n# '구시군'이 '합계'인 행만 추출\nfiltered = df_14th[df_14th['구시군'] == '합계']\n\n# 2번째 행 이후의 '선거인수' 합계 계산\ntotal_voters = filtered.iloc[1:]['선거인수'].sum()\n\nprint(\"두 번째 이후의 선거인수 합계:\", total_voters)\n\n두 번째 이후의 선거인수 합계: 28676547\n\n\n\n\n\nimage.png\n\n\n\n\n\nimage.png"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Elections",
    "section": "",
    "text": "Date\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nJul 10, 2025\n\n\nPresidential Elections 14th ~ 16th\n\n\nsw1kwon \n\n\n\n\nJul 10, 2025\n\n\nPresidential Elections 18th ~ 21st\n\n\nsw1kwon \n\n\n\n\nJul 10, 2025\n\n\nPresidential Elections 17th\n\n\nsw1kwon \n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/p18_21.html",
    "href": "posts/p18_21.html",
    "title": "Presidential Elections 18th ~ 21st",
    "section": "",
    "text": "21st_2025\n\n# =============================================================================\n# 21대 대통령선거 데이터 전처리 함수\n# =============================================================================\n\nimport pandas as pd\n\ndef convert_github_url_to_raw(github_url):\n    \"\"\"\n    깃허브 blob URL을 raw URL로 변환\n\n    Parameters:\n    -----------\n    github_url : 깃허브 파일 URL\n\n    Returns:\n    --------\n    raw URL (pandas가 직접 읽을 수 있는 형태)\n\n    Example:\n    --------\n    blob_url = \"https://github.com/user/repo/blob/main/file.xlsx\"\n    raw_url = convert_github_url_to_raw(blob_url)\n    # \"https://github.com/user/repo/raw/main/file.xlsx\"\n    \"\"\"\n    if '/blob/' in github_url:\n        return github_url.replace('/blob/', '/raw/')\n    return github_url\n\n\ndef process_21st_presidential_election(file_path):\n    \"\"\"\n    21대 대통령선거 데이터 전처리 함수\n\n    엑셀 파일 구조:\n    - 0~2행: 메타 정보 (무시)\n    - 3행: 헤더 첫 번째 줄 (시도명, 구시군명 등)\n    - 4행: 헤더 두 번째 줄 (후보자명, 득표수 등)\n    - 5행부터: 실제 데이터\n\n    Parameters:\n    -----------\n    file_path : 파일 경로 (로컬 파일, 깃허브 blob URL, 또는 raw URL)\n        - 로컬: \"./data/21대_선거결과.xlsx\"\n        - 깃허브 blob: \"https://github.com/user/repo/blob/main/파일.xlsx\" (자동 변환됨)\n        - 깃허브 raw: \"https://github.com/user/repo/raw/main/파일.xlsx\"\n\n    Returns:\n    --------\n    전처리된 선거 데이터 (pandas DataFrame, 합계 행만 포함)\n\n    Example:\n    --------\n    # 깃허브에서 불러오기 (blob URL 그대로 사용 - 자동 변환됨)\n    blob_url = \"https://github.com/user/repo/blob/main/21대/선거결과.xlsx\"\n    df = process_21st_presidential_election(blob_url)\n\n    # 로컬 파일 불러오기\n    df = process_21st_presidential_election(\"./data/21대_선거결과.xlsx\")\n    \"\"\"\n\n    # ================================\n    # 1. 파일 로드 (자동 감지)\n    # ================================\n    if file_path.startswith(('http://', 'https://')):\n        # URL인 경우 - blob URL이면 raw URL로 변환\n        raw_url = convert_github_url_to_raw(file_path)\n        print(f\"웹에서 파일 로드: {raw_url}\")\n        if raw_url != file_path:\n            print(f\"  (blob URL을 raw URL로 자동 변환)\")\n        df_all = pd.read_excel(raw_url, header=None)\n    else:\n        # 로컬 파일인 경우\n        print(f\"로컬에서 파일 로드: {file_path}\")\n        df_all = pd.read_excel(file_path, header=None)\n\n    print(f\"원본 데이터 크기: {df_all.shape}\")\n\n    # ================================\n    # 2. 헤더 구성 (3행 + 4행 병합)\n    # ================================\n    # 파이썬 인덱스는 0부터 시작하므로:\n    # 3행 = iloc[3] (실제 4번째 행)\n    # 4행 = iloc[4] (실제 5번째 행)\n    header_row_1 = df_all.iloc[3].fillna(\"\")  # 시도명, 구시군명 등\n    header_row_2 = df_all.iloc[4].fillna(\"\")  # 후보자명, 득표수 등\n    combined_headers = header_row_1.astype(str) + \"_\" + header_row_2.astype(str)\n\n    # ================================\n    # 3. 실제 데이터 추출 (5행부터)\n    # ================================\n    # 5행 = iloc[5] (실제 6번째 행)부터 데이터 시작\n    df_data = df_all.iloc[5:].copy()\n    df_data.columns = combined_headers\n\n    print(f\"데이터 추출 후 크기: {df_data.shape}\")\n    print(f\"컬럼 수: {len(df_data.columns)}\")\n\n    # ================================\n    # 4. 시도명 열 전처리\n    # ================================\n    # 시도명이 비어있는 행은 위 행의 값으로 채움 (forward fill)\n    sido_column = [col for col in df_data.columns if \"시도명\" in col][0]\n    df_data[sido_column] = df_data[sido_column].ffill()\n\n    # ================================\n    # 5. 주요 컬럼 추출\n    # ================================\n    gugun_column = [col for col in df_data.columns if \"구시군명\" in col][0]\n    dong_column = [col for col in df_data.columns if \"읍면동명\" in col][0]\n\n    print(f\"주요 컬럼:\")\n    print(f\"  - 시도: {sido_column}\")\n    print(f\"  - 구시군: {gugun_column}\")\n    print(f\"  - 읍면동: {dong_column}\")\n\n    # ================================\n    # 6. 합계 행 필터링\n    # ================================\n    # '합계'가 포함된 행만 추출 (지역별 집계 데이터)\n    filter_mask = (\n        df_data[gugun_column].astype(str).str.contains(\"합계\", na=False) |\n        df_data[dong_column].astype(str).str.contains(\"합계\", na=False)\n    )\n    df_filtered = df_data[filter_mask].copy()\n\n    print(f\"필터링 후 크기: {df_filtered.shape}\")\n\n    # ================================\n    # 7. 수치형 컬럼 정리\n    # ================================\n    # 4번째 컬럼(인덱스 4)부터는 보통 득표수 등 수치 데이터\n    numeric_columns = df_filtered.columns[4:]\n\n    print(f\"수치형 컬럼 개수: {len(numeric_columns)}\")\n\n    for col in numeric_columns:\n        # 쉼표 제거 → 공백 제거 → 빈값을 0으로 → 정수형 변환\n        df_filtered[col] = (\n            df_filtered[col]\n            .astype(str)           # 문자열로 변환\n            .str.replace(\",\", \"\")  # 천 단위 구분자 제거 (예: \"1,234\" → \"1234\")\n            .str.strip()           # 앞뒤 공백 제거\n            .replace(\"\", \"0\")      # 빈 문자열을 \"0\"으로 변경\n            .replace(\"nan\", \"0\")   # NaN 문자열을 \"0\"으로 변경\n            .astype(int)           # 최종적으로 정수형으로 변환\n        )\n\n    # ================================\n    # 8. 결과 반환\n    # ================================\n    print(f\"최종 데이터 크기: {df_filtered.shape}\")\n    print(\"전처리 완료!\")\n\n    return df_filtered\n\n\n# =============================================================================\n# 사용 예시\n# =============================================================================\n\n# 깃허브 blob URL로 불러오는 경우 (자동으로 raw URL로 변환됨)\n# blob_url = \"https://github.com/~~/korean-elections/blob/main/original/Presidential_Elections/21th_2025/제21대_대통령선거_개표결과.xlsx\"\n# df_21st = process_21st_presidential_election(blob_url)\n\n# 로컬에서 불러오는 경우\n# df_21st = process_21st_presidential_election(\"./data/21대_대선결과.xlsx\")\n\n# 업로드된 파일 사용하는 경우\n# df_21st = process_21st_presidential_election(\"제21대_대통령선거_개표결과.xlsx\")\n\n# 결과 확인\n# print(df_21st.head())\n# print(df_21st.columns.tolist())\n\n\n# 깃허브 blob URL로 불러오는 경우 (자동으로 raw URL로 변환됨)\nblob_url21 = \"https://github.com/sw1kwon/korean-elections/blob/main/original/Presidential_Elections/21st_2025/%EC%A0%9C21%EB%8C%80_%EB%8C%80%ED%86%B5%EB%A0%B9%EC%84%A0%EA%B1%B0_%EA%B0%9C%ED%91%9C%EA%B2%B0%EA%B3%BC.xlsx\"\ndf_21st = process_21st_presidential_election(blob_url21)\n\n웹에서 파일 로드: https://github.com/sw1kwon/korean-elections/raw/main/original/Presidential_Elections/21st_2025/%EC%A0%9C21%EB%8C%80_%EB%8C%80%ED%86%B5%EB%A0%B9%EC%84%A0%EA%B1%B0_%EA%B0%9C%ED%91%9C%EA%B2%B0%EA%B3%BC.xlsx\n  (blob URL을 raw URL로 자동 변환)\n원본 데이터 크기: (22692, 14)\n데이터 추출 후 크기: (22687, 14)\n컬럼 수: 14\n주요 컬럼:\n  - 시도: 시도명_\n  - 구시군: 구시군명_\n  - 읍면동: 읍면동명_\n필터링 후 크기: (271, 14)\n수치형 컬럼 개수: 10\n최종 데이터 크기: (271, 14)\n전처리 완료!\n\n\n\ndf_21st\n\n\n  \n    \n\n\n\n\n\n\n시도명_\n구시군명_\n읍면동명_\n투표구명_\n선거인수_\n투표수_\n후보자별 득표수_더불어민주당\\n이재명\n_국민의힘\\n김문수\n_개혁신당\\n이준석\n_민주노동당\\n권영국\n_무소속\\n송진호\n_계\n무효\\n투표수_\n기권수_\n\n\n\n\n6\n전국\n합계\nNaN\nNaN\n44391871\n35236497\n17287513\n14395639\n2917523\n344150\n35791\n34980616\n255881\n9155374\n\n\n7\n서울특별시\n합계(특별시)\nNaN\nNaN\n8293885\n6641606\n3105459\n2738405\n655346\n83900\n5998\n6589108\n52498\n1652279\n\n\n8\n서울특별시\n종로구\n합계\nNaN\n125901\n99261\n47735\n39574\n9326\n1754\n89\n98478\n783\n26640\n\n\n90\n서울특별시\n중구\n합계\nNaN\n110181\n87166\n40482\n36302\n8450\n1120\n62\n86416\n750\n23015\n\n\n169\n서울특별시\n용산구\n합계\nNaN\n183614\n143813\n58705\n67927\n13794\n2166\n102\n142694\n1119\n39801\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n22256\n경상남도\n거창군\n합계\nNaN\n52316\n41373\n12623\n25259\n2640\n332\n65\n40919\n454\n10943\n\n\n22306\n경상남도\n합천군\n합계\nNaN\n37329\n28935\n7001\n20132\n1188\n200\n46\n28567\n368\n8394\n\n\n22365\n제주특별자치도\n합계(도)\nNaN\nNaN\n565255\n421576\n228729\n145290\n36909\n6191\n528\n417647\n3929\n143679\n\n\n22366\n제주특별자치도\n제주시\n합계\nNaN\n409912\n306685\n169119\n102224\n27522\n4626\n384\n303875\n2810\n103227\n\n\n22565\n제주특별자치도\n서귀포시\n합계\nNaN\n155343\n114891\n59610\n43066\n9387\n1565\n144\n113772\n1119\n40452\n\n\n\n\n271 rows × 14 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n    \n      \n\n\n    \n        \n    \n\n      \n\n\n\n      \n    \n\n  \n    \n    \n\n  \n    \n  \n    \n    \n  \n\n    \n  \n\n\n\ndf_21st.columns.tolist()\n\n['시도명_',\n '구시군명_',\n '읍면동명_',\n '투표구명_',\n '선거인수_',\n '투표수_',\n '후보자별 득표수_더불어민주당\\n이재명',\n '_국민의힘\\n김문수',\n '_개혁신당\\n이준석',\n '_민주노동당\\n권영국',\n '_무소속\\n송진호',\n '_계',\n '무효\\n투표수_',\n '기권수_']\n\n\n\nrename_dict21 = {\n    '시도명_': '시도',\n    '구시군명_': '구시군',\n    '선거인수_': '선거인수',\n    '투표수_': '투표수',\n    '후보자별 득표수_더불어민주당\\n이재명': '득표수_1_더불어민주당_이재명',\n    '_국민의힘\\n김문수': '득표수_2_국민의힘_김문수',\n    '_개혁신당\\n이준석': '득표수_4_개혁신당_이준석',\n    '_민주노동당\\n권영국': '득표수_5_민주노동당_권영국',\n    '_무소속\\n송진호': '득표수_8_무소속_송진호',\n    '_계': '득표수_계',\n    '무효\\n투표수_': '무효투표수',\n    '기권수_': '기권수'\n}\n\n\ndf_21st.rename(columns=rename_dict21).drop(columns=['읍면동명_','투표구명_'])\n\n\n  \n    \n\n\n\n\n\n\n시도\n구시군\n선거인수\n투표수\n득표수_1_더불어민주당_이재명\n득표수_2_국민의힘_김문수\n득표수_4_개혁신당_이준석\n득표수_5_민주노동당_권영국\n득표수_8_무소속_송진호\n득표수_계\n무효투표수\n기권수\n\n\n\n\n6\n전국\n합계\n44391871\n35236497\n17287513\n14395639\n2917523\n344150\n35791\n34980616\n255881\n9155374\n\n\n7\n서울특별시\n합계(특별시)\n8293885\n6641606\n3105459\n2738405\n655346\n83900\n5998\n6589108\n52498\n1652279\n\n\n8\n서울특별시\n종로구\n125901\n99261\n47735\n39574\n9326\n1754\n89\n98478\n783\n26640\n\n\n90\n서울특별시\n중구\n110181\n87166\n40482\n36302\n8450\n1120\n62\n86416\n750\n23015\n\n\n169\n서울특별시\n용산구\n183614\n143813\n58705\n67927\n13794\n2166\n102\n142694\n1119\n39801\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n22256\n경상남도\n거창군\n52316\n41373\n12623\n25259\n2640\n332\n65\n40919\n454\n10943\n\n\n22306\n경상남도\n합천군\n37329\n28935\n7001\n20132\n1188\n200\n46\n28567\n368\n8394\n\n\n22365\n제주특별자치도\n합계(도)\n565255\n421576\n228729\n145290\n36909\n6191\n528\n417647\n3929\n143679\n\n\n22366\n제주특별자치도\n제주시\n409912\n306685\n169119\n102224\n27522\n4626\n384\n303875\n2810\n103227\n\n\n22565\n제주특별자치도\n서귀포시\n155343\n114891\n59610\n43066\n9387\n1565\n144\n113772\n1119\n40452\n\n\n\n\n271 rows × 12 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n    \n      \n\n\n    \n        \n    \n\n      \n\n\n\n      \n    \n\n    \n  \n\n\n\ndf_21st = df_21st.rename(columns=rename_dict21).drop(columns=['읍면동명_','투표구명_'])\n\n\n# 구시군 원소 괄호 제거\ndf_21st['구시군'] = (\n    df_21st['구시군']\n    .str.replace(r\"\\(.*\\)\", \"\", regex=True)\n    .str.strip()\n)\n\n\ndf_21st\n\n\n  \n    \n\n\n\n\n\n\n시도\n구시군\n선거인수\n투표수\n득표수_1_더불어민주당_이재명\n득표수_2_국민의힘_김문수\n득표수_4_개혁신당_이준석\n득표수_5_민주노동당_권영국\n득표수_8_무소속_송진호\n득표수_계\n무효투표수\n기권수\n\n\n\n\n6\n전국\n합계\n44391871\n35236497\n17287513\n14395639\n2917523\n344150\n35791\n34980616\n255881\n9155374\n\n\n7\n서울특별시\n합계\n8293885\n6641606\n3105459\n2738405\n655346\n83900\n5998\n6589108\n52498\n1652279\n\n\n8\n서울특별시\n종로구\n125901\n99261\n47735\n39574\n9326\n1754\n89\n98478\n783\n26640\n\n\n90\n서울특별시\n중구\n110181\n87166\n40482\n36302\n8450\n1120\n62\n86416\n750\n23015\n\n\n169\n서울특별시\n용산구\n183614\n143813\n58705\n67927\n13794\n2166\n102\n142694\n1119\n39801\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n22256\n경상남도\n거창군\n52316\n41373\n12623\n25259\n2640\n332\n65\n40919\n454\n10943\n\n\n22306\n경상남도\n합천군\n37329\n28935\n7001\n20132\n1188\n200\n46\n28567\n368\n8394\n\n\n22365\n제주특별자치도\n합계\n565255\n421576\n228729\n145290\n36909\n6191\n528\n417647\n3929\n143679\n\n\n22366\n제주특별자치도\n제주시\n409912\n306685\n169119\n102224\n27522\n4626\n384\n303875\n2810\n103227\n\n\n22565\n제주특별자치도\n서귀포시\n155343\n114891\n59610\n43066\n9387\n1565\n144\n113772\n1119\n40452\n\n\n\n\n271 rows × 12 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n    \n      \n\n\n    \n        \n    \n\n      \n\n\n\n      \n    \n\n  \n    \n    \n\n  \n    \n  \n    \n    \n  \n\n    \n  \n\n\n\ndf_21st[df_21st['구시군'] == '합계']\n\n\n  \n    \n\n\n\n\n\n\n시도\n구시군\n선거인수\n투표수\n득표수_1_더불어민주당_이재명\n득표수_2_국민의힘_김문수\n득표수_4_개혁신당_이준석\n득표수_5_민주노동당_권영국\n득표수_8_무소속_송진호\n득표수_계\n무효투표수\n기권수\n\n\n\n\n6\n전국\n합계\n44391871\n35236497\n17287513\n14395639\n2917523\n344150\n35791\n34980616\n255881\n9155374\n\n\n7\n서울특별시\n합계\n8293885\n6641606\n3105459\n2738405\n655346\n83900\n5998\n6589108\n52498\n1652279\n\n\n3245\n부산광역시\n합계\n2865552\n2245755\n895213\n1146238\n168473\n18189\n2099\n2230212\n15543\n619797\n\n\n4652\n대구광역시\n합계\n2049078\n1643051\n379130\n1103913\n135376\n12531\n1362\n1632312\n10739\n406027\n\n\n5659\n인천광역시\n합계\n2619348\n2035355\n1044295\n776952\n176739\n20743\n2098\n2020827\n14528\n583993\n\n\n6764\n광주광역시\n합계\n1194471\n1002149\n844682\n79937\n62104\n8767\n934\n996424\n5725\n192322\n\n\n7339\n대전광역시\n합계\n1241882\n977609\n470321\n393549\n94724\n9905\n1109\n969608\n8001\n264273\n\n\n7892\n울산광역시\n합계\n934509\n747950\n315820\n353180\n63177\n9299\n899\n742375\n5575\n186559\n\n\n8297\n세종특별자치시\n합계\n307067\n254695\n140620\n83965\n25004\n2961\n235\n252785\n1910\n52372\n\n\n8437\n경기도\n합계\n11715343\n9297448\n4821148\n3504620\n816435\n84074\n8356\n9234633\n62815\n2417895\n\n\n13152\n강원특별자치도\n합계\n1327019\n1029407\n449161\n483360\n78704\n9422\n1137\n1021784\n7623\n297612\n\n\n14283\n충청북도\n합계\n1379142\n1065558\n501990\n457065\n86984\n10169\n1228\n1057436\n8122\n313584\n\n\n15156\n충청남도\n합계\n1839339\n1397521\n661316\n600108\n111092\n12893\n1519\n1386928\n10593\n441818\n\n\n16409\n전북특별자치도\n합계\n1510908\n1246099\n1023272\n134996\n67961\n10061\n1719\n1238009\n8090\n264809\n\n\n17535\n전라남도\n합계\n1559431\n1303365\n1111941\n110624\n60822\n9352\n2104\n1294843\n8522\n256066\n\n\n19046\n경상북도\n합계\n2213614\n1747364\n442683\n1159594\n116094\n13884\n1788\n1734043\n13321\n466250\n\n\n20722\n경상남도\n합계\n2776028\n2179989\n851733\n1123843\n161579\n21809\n2678\n2161642\n18347\n596039\n\n\n22365\n제주특별자치도\n합계\n565255\n421576\n228729\n145290\n36909\n6191\n528\n417647\n3929\n143679\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n    \n      \n\n\n    \n        \n    \n\n      \n\n\n\n      \n    \n\n    \n  \n\n\n\ndf_21st.to_csv(\"temp1_president_21.csv\", index=False, encoding=\"utf-8-sig\")\n\n\n\n20th_2022\n\n# =============================================================================\n# 20대 대통령선거 데이터 전처리 함수\n# =============================================================================\n\nimport pandas as pd\n\ndef convert_github_url_to_raw(github_url):\n    \"\"\"\n    깃허브 blob URL을 raw URL로 변환\n\n    Parameters:\n    -----------\n    github_url : 깃허브 파일 URL\n\n    Returns:\n    --------\n    raw URL (pandas가 직접 읽을 수 있는 형태)\n\n    Example:\n    --------\n    blob_url = \"https://github.com/user/repo/blob/main/file.xlsx\"\n    raw_url = convert_github_url_to_raw(blob_url)\n    # \"https://github.com/user/repo/raw/main/file.xlsx\"\n    \"\"\"\n    if '/blob/' in github_url:\n        return github_url.replace('/blob/', '/raw/')\n    return github_url\n\n\ndef process_20th_presidential_election(file_path):\n    \"\"\"\n    20대 대통령선거 데이터 전처리 함수\n\n    엑셀 파일 구조:\n    - 0행: 헤더 (시도명, 구시군, 읍면동명, 후보자명 등)\n    - 1행부터: 실제 데이터\n\n    Parameters:\n    -----------\n    file_path : 파일 경로 (로컬 파일, 깃허브 blob URL, 또는 raw URL)\n        - 로컬: \"./data/20대_선거결과.xlsx\"\n        - 깃허브 blob: \"https://github.com/user/repo/blob/main/파일.xlsx\" (자동 변환됨)\n        - 깃허브 raw: \"https://github.com/user/repo/raw/main/파일.xlsx\"\n\n    Returns:\n    --------\n    전처리된 선거 데이터 (pandas DataFrame, 합계 행만 포함)\n\n    Example:\n    --------\n    # 깃허브에서 불러오기 (blob URL 그대로 사용 - 자동 변환됨)\n    blob_url = \"https://github.com/user/repo/blob/main/20대/선거결과.xlsx\"\n    df = process_20th_presidential_election(blob_url)\n\n    # 로컬 파일 불러오기\n    df = process_20th_presidential_election(\"./data/20대_선거결과.xlsx\")\n    \"\"\"\n\n    # ================================\n    # 1. 파일 로드 (자동 감지)\n    # ================================\n    if file_path.startswith(('http://', 'https://')):\n        # URL인 경우 - blob URL이면 raw URL로 변환\n        raw_url = convert_github_url_to_raw(file_path)\n        print(f\"웹에서 파일 로드: {raw_url}\")\n        if raw_url != file_path:\n            print(f\"  (blob URL을 raw URL로 자동 변환)\")\n        df_all = pd.read_excel(raw_url, header=0)  # 첫 번째 행이 헤더\n    else:\n        # 로컬 파일인 경우\n        print(f\"로컬에서 파일 로드: {file_path}\")\n        df_all = pd.read_excel(file_path, header=0)  # 첫 번째 행이 헤더\n\n    print(f\"원본 데이터 크기: {df_all.shape}\")\n    print(f\"컬럼명: {list(df_all.columns)}\")\n\n    # ================================\n    # 2. 주요 컬럼 확인\n    # ================================\n    # 20대는 헤더가 단순함 (0행이 바로 컬럼명)\n    gugun_column = '구시군'\n    dong_column = '읍면동명'\n\n    print(f\"주요 컬럼:\")\n    print(f\"  - 구시군: {gugun_column}\")\n    print(f\"  - 읍면동: {dong_column}\")\n\n    # ================================\n    # 3. 합계 행 필터링\n    # ================================\n    # '합계'가 포함된 행만 추출 (지역별 집계 데이터)\n    filter_mask = (\n        df_all[gugun_column].astype(str).str.contains(\"합계\", na=False) |\n        df_all[dong_column].astype(str).str.contains(\"합계\", na=False)\n    )\n    df_filtered = df_all[filter_mask].copy()\n\n    print(f\"필터링 후 크기: {df_filtered.shape}\")\n\n    # ================================\n    # 4. 수치형 컬럼 정리\n    # ================================\n    # 4번째 컬럼(인덱스 4)부터는 보통 득표수 등 수치 데이터\n    numeric_columns = df_filtered.columns[4:]\n\n    print(f\"수치형 컬럼 개수: {len(numeric_columns)}\")\n\n    for col in numeric_columns:\n        # 쉼표 제거 → 공백 제거 → 빈값을 0으로 → 정수형 변환\n        df_filtered[col] = (\n            df_filtered[col]\n            .astype(str)           # 문자열로 변환\n            .str.replace(\",\", \"\")  # 천 단위 구분자 제거 (예: \"1,234\" → \"1234\")\n            .str.strip()           # 앞뒤 공백 제거\n            .replace(\"\", \"0\")      # 빈 문자열을 \"0\"으로 변경\n            .replace(\"nan\", \"0\")   # NaN 문자열을 \"0\"으로 변경\n            .astype(int)           # 최종적으로 정수형으로 변환\n        )\n\n    # ================================\n    # 5. 결과 반환\n    # ================================\n    print(f\"최종 데이터 크기: {df_filtered.shape}\")\n    print(\"전처리 완료!\")\n\n    return df_filtered\n\n\n# =============================================================================\n# 사용 예시\n# =============================================================================\n\n# 깃허브 blob URL로 불러오는 경우 (자동으로 raw URL로 변환됨)\n# blob_url = \"https://github.com/~~/korean-elections/blob/main/original/Presidential_Elections/20th_2022/개표단위별_개표결과_대통령선거_전체.xlsx\"\n# df_20th = process_20th_presidential_election(blob_url)\n\n# 로컬에서 불러오는 경우\n# df_20th = process_20th_presidential_election(\"./data/20대_대선결과.xlsx\")\n\n# 업로드된 파일 사용하는 경우\n# df_20th = process_20th_presidential_election(\"개표단위별_개표결과_대통령선거_전체.xlsx\")\n\n# 결과 확인\n# print(df_20th.head())\n# print(df_20th.columns.tolist())\n\n\n# 깃허브 blob URL로 불러오는 경우 (자동으로 raw URL로 변환됨)\nblob_url20 = \"https://github.com/sw1kwon/korean-elections/blob/main/original/Presidential_Elections/20th_2022/%EA%B0%9C%ED%91%9C%EB%8B%A8%EC%9C%84%EB%B3%84_%EA%B0%9C%ED%91%9C%EA%B2%B0%EA%B3%BC_%EB%8C%80%ED%86%B5%EB%A0%B9%EC%84%A0%EA%B1%B0_%EC%A0%84%EC%B2%B4.xlsx\"\ndf_20th = process_20th_presidential_election(blob_url20)\n\n웹에서 파일 로드: https://github.com/sw1kwon/korean-elections/raw/main/original/Presidential_Elections/20th_2022/%EA%B0%9C%ED%91%9C%EB%8B%A8%EC%9C%84%EB%B3%84_%EA%B0%9C%ED%91%9C%EA%B2%B0%EA%B3%BC_%EB%8C%80%ED%86%B5%EB%A0%B9%EC%84%A0%EA%B1%B0_%EC%A0%84%EC%B2%B4.xlsx\n  (blob URL을 raw URL로 자동 변환)\n원본 데이터 크기: (22753, 21)\n컬럼명: ['시도', '구시군', '읍면동명', '투표구명', '선거인수', '투표수', '더불어민주당\\n이재명', '국민의힘\\n윤석열', '정의당\\n심상정', '기본소득당\\n오준호', '국가혁명당 \\n허경영', '노동당\\n이백윤', '새누리당\\n옥은호', '신자유민주연합\\n김경재', '우리공화당\\n조원진', '진보당\\n김재연', '통일한국당\\n이경희', '한류연합당\\n김민찬', '계', '무효투표수', '기권수']\n주요 컬럼:\n  - 구시군: 구시군\n  - 읍면동: 읍면동명\n필터링 후 크기: (268, 21)\n수치형 컬럼 개수: 17\n최종 데이터 크기: (268, 21)\n전처리 완료!\n\n\n\ndf_20th\n\n\n  \n    \n\n\n\n\n\n\n시도\n구시군\n읍면동명\n투표구명\n선거인수\n투표수\n더불어민주당\\n이재명\n국민의힘\\n윤석열\n정의당\\n심상정\n기본소득당\\n오준호\n...\n노동당\\n이백윤\n새누리당\\n옥은호\n신자유민주연합\\n김경재\n우리공화당\\n조원진\n진보당\\n김재연\n통일한국당\\n이경희\n한류연합당\\n김민찬\n계\n무효투표수\n기권수\n\n\n\n\n0\n전국\n합계\nNaN\nNaN\n44197692\n34067853\n16147738\n16394815\n803358\n18105\n...\n9176\n4970\n8317\n25972\n37366\n11708\n17305\n33760311\n307542\n10129839\n\n\n1\n서울특별시\n합계(특별시)\nNaN\nNaN\n8346647\n6501831\n2944981\n3255747\n180324\n3829\n...\n1571\n844\n1791\n4657\n5615\n1333\n1907\n6439139\n62692\n1844816\n\n\n2\n서울특별시\n종로구\n합계\nNaN\n129968\n100629\n46130\n49172\n3115\n53\n...\n42\n9\n50\n82\n105\n20\n30\n99366\n1263\n29339\n\n\n85\n서울특별시\n중구\n합계\nNaN\n111448\n84998\n38244\n42906\n2310\n46\n...\n19\n10\n17\n67\n57\n17\n28\n84184\n814\n26450\n\n\n164\n서울특별시\n용산구\n합계\nNaN\n199077\n152068\n60063\n85047\n4374\n67\n...\n37\n24\n56\n86\n100\n27\n46\n150682\n1386\n47009\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n22315\n경상남도\n거창군\n합계\nNaN\n53049\n41399\n11963\n27254\n895\n46\n...\n19\n18\n12\n42\n92\n62\n52\n40945\n454\n11650\n\n\n22365\n경상남도\n합천군\n합계\nNaN\n39768\n31270\n6911\n22742\n511\n30\n...\n24\n9\n16\n62\n96\n68\n52\n30832\n438\n8498\n\n\n22426\n제주특별자치도\n합계(도)\nNaN\nNaN\n564354\n409649\n213130\n173014\n13598\n267\n...\n146\n63\n101\n271\n571\n228\n310\n405238\n4411\n154705\n\n\n22427\n제주특별자치도\n제주시\n합계\nNaN\n408552\n296826\n157695\n122084\n10007\n189\n...\n108\n46\n80\n193\n395\n159\n197\n293649\n3177\n111726\n\n\n22626\n제주특별자치도\n서귀포시\n합계\nNaN\n155802\n112823\n55435\n50930\n3591\n78\n...\n38\n17\n21\n78\n176\n69\n113\n111589\n1234\n42979\n\n\n\n\n268 rows × 21 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n    \n      \n\n\n    \n        \n    \n\n      \n\n\n\n      \n    \n\n  \n    \n    \n\n  \n    \n  \n    \n    \n  \n\n    \n  \n\n\n\ndf_20th.columns.tolist()\n\n['시도',\n '구시군',\n '읍면동명',\n '투표구명',\n '선거인수',\n '투표수',\n '더불어민주당\\n이재명',\n '국민의힘\\n윤석열',\n '정의당\\n심상정',\n '기본소득당\\n오준호',\n '국가혁명당 \\n허경영',\n '노동당\\n이백윤',\n '새누리당\\n옥은호',\n '신자유민주연합\\n김경재',\n '우리공화당\\n조원진',\n '진보당\\n김재연',\n '통일한국당\\n이경희',\n '한류연합당\\n김민찬',\n '계',\n '무효투표수',\n '기권수']\n\n\n\nrename_dict20 = {\n    '더불어민주당\\n이재명': '득표수_1_더불어민주당_이재명',\n    '국민의힘\\n윤석열': '득표수_2_국민의힘_윤석열',\n    '정의당\\n심상정': '득표수_3_정의당_심상정',\n    '기본소득당\\n오준호': '득표수_5_기본소득당_오준호',\n    '국가혁명당 \\n허경영': '득표수_6_국가혁명당_허경영',\n    '노동당\\n이백윤': '득표수_7_노동당_이백윤',\n    '새누리당\\n옥은호': '득표수_8_새누리당_옥은호',\n    '신자유민주연합\\n김경재': '득표수_10_신자유민주연합_김경재',\n    '우리공화당\\n조원진': '득표수_11_우리공화당_조원진',\n    '진보당\\n김재연': '득표수_12_진보당_김재연',\n    '통일한국당\\n이경희': '득표수_13_통일한국당_이경희',\n    '한류연합당\\n김민찬': '득표수_14_한류연합당_김민찬',\n    '계': '득표수_계'\n}\n\n\ndf_20th.rename(columns=rename_dict20).drop(columns=['읍면동명','투표구명'])\n\n\n  \n    \n\n\n\n\n\n\n시도\n구시군\n선거인수\n투표수\n득표수_1_더불어민주당_이재명\n득표수_2_국민의힘_윤석열\n득표수_3_정의당_심상정\n득표수_5_기본소득당_오준호\n득표수_6_국가혁명당_허경영\n득표수_7_노동당_이백윤\n득표수_8_새누리당_옥은호\n득표수_10_신자유민주연합_김경재\n득표수_11_우리공화당_조원진\n득표수_12_진보당_김재연\n득표수_13_통일한국당_이경희\n득표수_14_한류연합당_김민찬\n득표수_계\n무효투표수\n기권수\n\n\n\n\n0\n전국\n합계\n44197692\n34067853\n16147738\n16394815\n803358\n18105\n281481\n9176\n4970\n8317\n25972\n37366\n11708\n17305\n33760311\n307542\n10129839\n\n\n1\n서울특별시\n합계(특별시)\n8346647\n6501831\n2944981\n3255747\n180324\n3829\n36540\n1571\n844\n1791\n4657\n5615\n1333\n1907\n6439139\n62692\n1844816\n\n\n2\n서울특별시\n종로구\n129968\n100629\n46130\n49172\n3115\n53\n558\n42\n9\n50\n82\n105\n20\n30\n99366\n1263\n29339\n\n\n85\n서울특별시\n중구\n111448\n84998\n38244\n42906\n2310\n46\n463\n19\n10\n17\n67\n57\n17\n28\n84184\n814\n26450\n\n\n164\n서울특별시\n용산구\n199077\n152068\n60063\n85047\n4374\n67\n755\n37\n24\n56\n86\n100\n27\n46\n150682\n1386\n47009\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n22315\n경상남도\n거창군\n53049\n41399\n11963\n27254\n895\n46\n490\n19\n18\n12\n42\n92\n62\n52\n40945\n454\n11650\n\n\n22365\n경상남도\n합천군\n39768\n31270\n6911\n22742\n511\n30\n311\n24\n9\n16\n62\n96\n68\n52\n30832\n438\n8498\n\n\n22426\n제주특별자치도\n합계(도)\n564354\n409649\n213130\n173014\n13598\n267\n3539\n146\n63\n101\n271\n571\n228\n310\n405238\n4411\n154705\n\n\n22427\n제주특별자치도\n제주시\n408552\n296826\n157695\n122084\n10007\n189\n2496\n108\n46\n80\n193\n395\n159\n197\n293649\n3177\n111726\n\n\n22626\n제주특별자치도\n서귀포시\n155802\n112823\n55435\n50930\n3591\n78\n1043\n38\n17\n21\n78\n176\n69\n113\n111589\n1234\n42979\n\n\n\n\n268 rows × 19 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n    \n      \n\n\n    \n        \n    \n\n      \n\n\n\n      \n    \n\n    \n  \n\n\n\ndf_20th = df_20th.rename(columns=rename_dict20).drop(columns=['읍면동명','투표구명'])\n\n\n# 구시군 원소 괄호 제거\ndf_20th['구시군'] = (\n    df_20th['구시군']\n    .str.replace(r\"\\(.*\\)\", \"\", regex=True)\n    .str.strip()\n)\n\n\ndf_20th\n\n\n  \n    \n\n\n\n\n\n\n시도\n구시군\n선거인수\n투표수\n득표수_1_더불어민주당_이재명\n득표수_2_국민의힘_윤석열\n득표수_3_정의당_심상정\n득표수_5_기본소득당_오준호\n득표수_6_국가혁명당_허경영\n득표수_7_노동당_이백윤\n득표수_8_새누리당_옥은호\n득표수_10_신자유민주연합_김경재\n득표수_11_우리공화당_조원진\n득표수_12_진보당_김재연\n득표수_13_통일한국당_이경희\n득표수_14_한류연합당_김민찬\n득표수_계\n무효투표수\n기권수\n\n\n\n\n0\n전국\n합계\n44197692\n34067853\n16147738\n16394815\n803358\n18105\n281481\n9176\n4970\n8317\n25972\n37366\n11708\n17305\n33760311\n307542\n10129839\n\n\n1\n서울특별시\n합계\n8346647\n6501831\n2944981\n3255747\n180324\n3829\n36540\n1571\n844\n1791\n4657\n5615\n1333\n1907\n6439139\n62692\n1844816\n\n\n2\n서울특별시\n종로구\n129968\n100629\n46130\n49172\n3115\n53\n558\n42\n9\n50\n82\n105\n20\n30\n99366\n1263\n29339\n\n\n85\n서울특별시\n중구\n111448\n84998\n38244\n42906\n2310\n46\n463\n19\n10\n17\n67\n57\n17\n28\n84184\n814\n26450\n\n\n164\n서울특별시\n용산구\n199077\n152068\n60063\n85047\n4374\n67\n755\n37\n24\n56\n86\n100\n27\n46\n150682\n1386\n47009\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n22315\n경상남도\n거창군\n53049\n41399\n11963\n27254\n895\n46\n490\n19\n18\n12\n42\n92\n62\n52\n40945\n454\n11650\n\n\n22365\n경상남도\n합천군\n39768\n31270\n6911\n22742\n511\n30\n311\n24\n9\n16\n62\n96\n68\n52\n30832\n438\n8498\n\n\n22426\n제주특별자치도\n합계\n564354\n409649\n213130\n173014\n13598\n267\n3539\n146\n63\n101\n271\n571\n228\n310\n405238\n4411\n154705\n\n\n22427\n제주특별자치도\n제주시\n408552\n296826\n157695\n122084\n10007\n189\n2496\n108\n46\n80\n193\n395\n159\n197\n293649\n3177\n111726\n\n\n22626\n제주특별자치도\n서귀포시\n155802\n112823\n55435\n50930\n3591\n78\n1043\n38\n17\n21\n78\n176\n69\n113\n111589\n1234\n42979\n\n\n\n\n268 rows × 19 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n    \n      \n\n\n    \n        \n    \n\n      \n\n\n\n      \n    \n\n  \n    \n    \n\n  \n    \n  \n    \n    \n  \n\n    \n  \n\n\n\ndf_20th[df_20th['구시군'] == '합계']\n\n\n  \n    \n\n\n\n\n\n\n시도\n구시군\n선거인수\n투표수\n득표수_1_더불어민주당_이재명\n득표수_2_국민의힘_윤석열\n득표수_3_정의당_심상정\n득표수_5_기본소득당_오준호\n득표수_6_국가혁명당_허경영\n득표수_7_노동당_이백윤\n득표수_8_새누리당_옥은호\n득표수_10_신자유민주연합_김경재\n득표수_11_우리공화당_조원진\n득표수_12_진보당_김재연\n득표수_13_통일한국당_이경희\n득표수_14_한류연합당_김민찬\n득표수_계\n무효투표수\n기권수\n\n\n\n\n0\n전국\n합계\n44197692\n34067853\n16147738\n16394815\n803358\n18105\n281481\n9176\n4970\n8317\n25972\n37366\n11708\n17305\n33760311\n307542\n10129839\n\n\n1\n서울특별시\n합계\n8346647\n6501831\n2944981\n3255747\n180324\n3829\n36540\n1571\n844\n1791\n4657\n5615\n1333\n1907\n6439139\n62692\n1844816\n\n\n3242\n부산광역시\n합계\n2921510\n2200224\n831896\n1270072\n47541\n1071\n21990\n546\n352\n527\n1867\n2799\n575\n942\n2180178\n20046\n721286\n\n\n4651\n대구광역시\n합계\n2046714\n1611512\n345045\n1199888\n31131\n892\n13941\n344\n261\n451\n2824\n938\n472\n619\n1596806\n14706\n435202\n\n\n5612\n인천광역시\n합계\n2519225\n1883504\n913320\n878560\n51852\n1116\n16733\n508\n276\n449\n1378\n1593\n511\n758\n1867054\n16450\n635721\n\n\n6703\n광주광역시\n합계\n1209206\n985492\n830058\n124511\n14865\n434\n6138\n242\n92\n140\n112\n1366\n188\n455\n978601\n6891\n223714\n\n\n7290\n대전광역시\n합계\n1233177\n945308\n434950\n464060\n25445\n566\n8593\n223\n138\n227\n588\n958\n258\n395\n936401\n8907\n287869\n\n\n7844\n울산광역시\n합계\n942210\n735461\n297134\n396321\n21292\n375\n9234\n308\n109\n185\n685\n2180\n234\n333\n728390\n7071\n206749\n\n\n8263\n세종특별자치시\n합계\n288895\n231832\n119349\n101491\n6780\n100\n1594\n50\n23\n48\n121\n181\n66\n88\n229891\n1941\n57063\n\n\n8396\n경기도\n합계\n11433288\n8763727\n4428151\n3965341\n205709\n4151\n63207\n1919\n1124\n1990\n5897\n8768\n1927\n3192\n8691376\n72351\n2669561\n\n\n12992\n강원도\n합계\n1333621\n1015458\n419644\n544980\n25031\n582\n11668\n323\n181\n262\n824\n1260\n525\n560\n1005840\n9618\n318163\n\n\n14129\n충청북도\n합계\n1365033\n1020649\n455853\n511921\n26557\n614\n11165\n385\n213\n288\n779\n1083\n698\n653\n1010209\n10440\n344384\n\n\n15014\n충청남도\n합계\n1796474\n1324660\n589991\n670283\n31789\n750\n14169\n477\n200\n314\n899\n1586\n791\n864\n1312113\n12547\n471814\n\n\n16261\n전라북도\n합계\n1533125\n1235212\n1016863\n176809\n19451\n542\n7975\n377\n135\n199\n299\n896\n409\n1464\n1225419\n9793\n297913\n\n\n17434\n전라남도\n합계\n1581278\n1282168\n1094872\n145549\n16279\n672\n8322\n473\n179\n304\n296\n1917\n507\n2246\n1271616\n10552\n299110\n\n\n19001\n경상북도\n합계\n2273028\n1774284\n418371\n1278922\n33123\n964\n18028\n535\n356\n550\n2431\n1763\n1607\n1046\n1757696\n16588\n498744\n\n\n20756\n경상남도\n합계\n2809907\n2146882\n794130\n1237346\n52591\n1180\n28645\n749\n424\n491\n2044\n3892\n1379\n1473\n2124344\n22538\n663025\n\n\n22426\n제주특별자치도\n합계\n564354\n409649\n213130\n173014\n13598\n267\n3539\n146\n63\n101\n271\n571\n228\n310\n405238\n4411\n154705\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n    \n      \n\n\n    \n        \n    \n\n      \n\n\n\n      \n    \n\n    \n  \n\n\n\ndf_20th.to_csv(\"temp1_president_20.csv\", index=False, encoding=\"utf-8-sig\")\n\n\n\n19th_2017\n\n# =============================================================================\n# 19대 대통령선거 데이터 전처리 함수\n# =============================================================================\n\nimport pandas as pd\n\ndef convert_github_url_to_raw(github_url):\n    \"\"\"\n    깃허브 blob URL을 raw URL로 변환\n\n    Parameters:\n    -----------\n    github_url : 깃허브 파일 URL\n\n    Returns:\n    --------\n    raw URL (pandas가 직접 읽을 수 있는 형태)\n\n    Example:\n    --------\n    blob_url = \"https://github.com/user/repo/blob/main/file.xlsx\"\n    raw_url = convert_github_url_to_raw(blob_url)\n    # \"https://github.com/user/repo/raw/main/file.xlsx\"\n    \"\"\"\n    if '/blob/' in github_url:\n        return github_url.replace('/blob/', '/raw/')\n    return github_url\n\n\ndef process_19th_presidential_election(file_path):\n    \"\"\"\n    19대 대통령선거 데이터 전처리 함수\n\n    엑셀 파일 구조:\n    - 0행: 헤더 첫 번째 줄 (시도명, 구시군명 등)\n    - 1행: 헤더 두 번째 줄 (후보자명, 득표수 등)\n    - 2행부터: 실제 데이터\n\n    Parameters:\n    -----------\n    file_path : 파일 경로 (로컬 파일, 깃허브 blob URL, 또는 raw URL)\n        - 로컬: \"./data/19대_선거결과.xlsx\"\n        - 깃허브 blob: \"https://github.com/user/repo/blob/main/파일.xlsx\" (자동 변환됨)\n        - 깃허브 raw: \"https://github.com/user/repo/raw/main/파일.xlsx\"\n\n    Returns:\n    --------\n    전처리된 선거 데이터 (pandas DataFrame, 합계 행만 포함)\n\n    Example:\n    --------\n    # 깃허브에서 불러오기 (blob URL 그대로 사용 - 자동 변환됨)\n    blob_url = \"https://github.com/user/repo/blob/main/19대/선거결과.xlsx\"\n    df = process_19th_presidential_election(blob_url)\n\n    # 로컬 파일 불러오기\n    df = process_19th_presidential_election(\"./data/19대_선거결과.xlsx\")\n    \"\"\"\n\n    # ================================\n    # 1. 파일 로드 (자동 감지)\n    # ================================\n    if file_path.startswith(('http://', 'https://')):\n        # URL인 경우 - blob URL이면 raw URL로 변환\n        raw_url = convert_github_url_to_raw(file_path)\n        print(f\"웹에서 파일 로드: {raw_url}\")\n        if raw_url != file_path:\n            print(f\"  (blob URL을 raw URL로 자동 변환)\")\n        df_all = pd.read_excel(raw_url, header=None)\n    else:\n        # 로컬 파일인 경우\n        print(f\"로컬에서 파일 로드: {file_path}\")\n        df_all = pd.read_excel(file_path, header=None)\n\n    print(f\"원본 데이터 크기: {df_all.shape}\")\n\n    # ================================\n    # 2. 헤더 구성 (0행 + 1행 병합)\n    # ================================\n    # 파이썬 인덱스는 0부터 시작하므로:\n    # 0행 = iloc[0] (실제 1번째 행)\n    # 1행 = iloc[1] (실제 2번째 행)\n    header_row_1 = df_all.iloc[0].fillna(\"\")  # 시도명, 구시군명 등\n    header_row_2 = df_all.iloc[1].fillna(\"\")  # 후보자명, 득표수 등\n    combined_headers = header_row_1.astype(str) + \"_\" + header_row_2.astype(str)\n\n    # ================================\n    # 3. 실제 데이터 추출 (2행부터)\n    # ================================\n    # 2행 = iloc[2] (실제 3번째 행)부터 데이터 시작\n    df_data = df_all.iloc[2:].copy()\n    df_data.columns = combined_headers\n\n    print(f\"데이터 추출 후 크기: {df_data.shape}\")\n    print(f\"컬럼 수: {len(df_data.columns)}\")\n\n    # ================================\n    # 4. 주요 컬럼 추출\n    # ================================\n    sido_column = [col for col in df_data.columns if \"시도명\" in col][0]\n    gugun_column = [col for col in df_data.columns if \"구시군명\" in col][0]\n    dong_column = [col for col in df_data.columns if \"읍면동명\" in col][0]\n\n    print(f\"주요 컬럼:\")\n    print(f\"  - 시도: {sido_column}\")\n    print(f\"  - 구시군: {gugun_column}\")\n    print(f\"  - 읍면동: {dong_column}\")\n\n    # ================================\n    # 5. 합계 행 필터링\n    # ================================\n    # '전국', '합계'가 포함된 행만 추출 (지역별 집계 데이터)\n    # 19대는 시도명에 '전국'도 포함하여 필터링\n    filter_mask = (\n        df_data[sido_column].astype(str).str.contains(\"전국\", na=False) |\n        df_data[gugun_column].astype(str).str.contains(\"합계\", na=False) |\n        df_data[dong_column].astype(str).str.contains(\"합계\", na=False)\n    )\n    df_filtered = df_data[filter_mask].copy()\n\n    print(f\"필터링 후 크기: {df_filtered.shape}\")\n\n    # ================================\n    # 6. 수치형 컬럼 정리\n    # ================================\n    # 4번째 컬럼(인덱스 4)부터는 보통 득표수 등 수치 데이터\n    numeric_columns = df_filtered.columns[4:]\n\n    print(f\"수치형 컬럼 개수: {len(numeric_columns)}\")\n\n    for col in numeric_columns:\n        # 쉼표 제거 → 공백 제거 → 빈값을 0으로 → 정수형 변환\n        df_filtered[col] = (\n            df_filtered[col]\n            .astype(str)           # 문자열로 변환\n            .str.replace(\",\", \"\")  # 천 단위 구분자 제거 (예: \"1,234\" → \"1234\")\n            .str.strip()           # 앞뒤 공백 제거\n            .replace(\"\", \"0\")      # 빈 문자열을 \"0\"으로 변경\n            .replace(\"nan\", \"0\")   # NaN 문자열을 \"0\"으로 변경\n            .astype(int)           # 최종적으로 정수형으로 변환\n        )\n\n    # ================================\n    # 7. 결과 반환\n    # ================================\n    print(f\"최종 데이터 크기: {df_filtered.shape}\")\n    print(\"전처리 완료!\")\n\n    return df_filtered\n\n\n# =============================================================================\n# 사용 예시\n# =============================================================================\n\n# 깃허브 blob URL로 불러오는 경우 (자동으로 raw URL로 변환됨)\n# blob_url = \"https://github.com/~~/korean-elections/blob/main/original/Presidential_Elections/19th_2017/제19대 대통령선거 개표자료.xlsx\"\n# df_19th = process_19th_presidential_election(blob_url)\n\n# 로컬에서 불러오는 경우\n# df_19th = process_19th_presidential_election(\"./data/19대_대선결과.xlsx\")\n\n# 업로드된 파일 사용하는 경우\n# df_19th = process_19th_presidential_election(\"제19대 대통령선거 개표자료.xlsx\")\n\n# 결과 확인\n# print(df_19th.head())\n# print(df_19th.columns.tolist())\n\n\n# 깃허브 blob URL로 불러오는 경우 (자동으로 raw URL로 변환됨)\nblob_url19 = \"https://github.com/sw1kwon/korean-elections/blob/main/original/Presidential_Elections/19th_2017/%EC%A0%9C19%EB%8C%80%20%EB%8C%80%ED%86%B5%EB%A0%B9%EC%84%A0%EA%B1%B0%20%EA%B0%9C%ED%91%9C%EC%9E%90%EB%A3%8C.xlsx\"\ndf_19th = process_19th_presidential_election(blob_url19)\n\n웹에서 파일 로드: https://github.com/sw1kwon/korean-elections/raw/main/original/Presidential_Elections/19th_2017/%EC%A0%9C19%EB%8C%80%20%EB%8C%80%ED%86%B5%EB%A0%B9%EC%84%A0%EA%B1%B0%20%EA%B0%9C%ED%91%9C%EC%9E%90%EB%A3%8C.xlsx\n  (blob URL을 raw URL로 자동 변환)\n원본 데이터 크기: (22216, 22)\n데이터 추출 후 크기: (22214, 22)\n컬럼 수: 22\n주요 컬럼:\n  - 시도: 시도명_\n  - 구시군: 구시군명_\n  - 읍면동: 읍면동명_\n필터링 후 크기: (268, 22)\n수치형 컬럼 개수: 18\n최종 데이터 크기: (268, 22)\n전처리 완료!\n\n\n\ndf_19th\n\n\n  \n    \n\n\n\n\n\n\n시도명_\n구시군명_\n읍면동명_\n투표구명_\n선거인수_\n투표수_\n후보자별 득표수_더불어민주당\\n문재인\n_자유한국당\\n홍준표\n_국민의당\\n안철수\n_바른정당\\n유승민\n...\n_경제애국당\\n오영국\n_국민대통합당\\n장성민\n_늘푸른한국당\\n이재오\n_민중연합당\\n김선동\n_한국국민당\\n이경희\n_홍익당\\n윤홍식\n_무소속\\n김민찬\n_계\n무효투표수_\n기권수_\n\n\n\n\n2\n전국\nNaN\nNaN\nNaN\n42479710\n32807908\n13423800\n7852849\n6998342\n2208771\n...\n6040\n21709\n9140\n27229\n11355\n18543\n33990\n32672175\n135733\n9671802\n\n\n3\n서울특별시\n합계\nNaN\nNaN\n8382999\n6590646\n2781345\n1365285\n1492767\n476973\n...\n789\n3554\n1938\n3416\n1277\n2177\n3950\n6568917\n21729\n1792353\n\n\n4\n서울특별시\n종로구\n합계\nNaN\n133769\n102566\n42512\n22325\n22313\n7412\n...\n5\n78\n31\n63\n26\n47\n49\n102202\n364\n31203\n\n\n86\n서울특별시\n중구\n합계\nNaN\n109836\n82852\n34062\n17901\n19372\n5874\n...\n12\n53\n21\n55\n18\n25\n51\n82595\n257\n26984\n\n\n165\n서울특별시\n용산구\n합계\nNaN\n197962\n148157\n58081\n35230\n32109\n11825\n...\n17\n68\n23\n72\n32\n51\n80\n147660\n497\n49805\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n21775\n경상남도\n거창군\n합계\nNaN\n53345\n41325\n11256\n19976\n4923\n2447\n...\n12\n37\n22\n48\n54\n105\n100\n40949\n376\n12020\n\n\n21825\n경상남도\n합천군\n합계\nNaN\n42887\n33021\n7143\n19699\n3077\n1317\n...\n23\n26\n16\n28\n51\n153\n76\n32711\n310\n9866\n\n\n21889\n제주특별자치도\n합계\nNaN\nNaN\n518000\n374459\n169493\n68063\n77861\n22784\n...\n269\n312\n113\n335\n236\n289\n556\n372412\n2047\n143541\n\n\n21890\n제주특별자치도\n제주시\n합계\nNaN\n375292\n273163\n125717\n48027\n55971\n16885\n...\n96\n193\n73\n257\n153\n178\n368\n271780\n1383\n102129\n\n\n22089\n제주특별자치도\n서귀포시\n합계\nNaN\n142708\n101296\n43776\n20036\n21890\n5899\n...\n173\n119\n40\n78\n83\n111\n188\n100632\n664\n41412\n\n\n\n\n268 rows × 22 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n    \n      \n\n\n    \n        \n    \n\n      \n\n\n\n      \n    \n\n  \n    \n    \n\n  \n    \n  \n    \n    \n  \n\n    \n  \n\n\n\ndf_19th.columns.tolist()\n\n['시도명_',\n '구시군명_',\n '읍면동명_',\n '투표구명_',\n '선거인수_',\n '투표수_',\n '후보자별 득표수_더불어민주당\\n문재인',\n '_자유한국당\\n홍준표',\n '_국민의당\\n안철수',\n '_바른정당\\n유승민',\n '_정의당\\n심상정',\n '_새누리당\\n조원진',\n '_경제애국당\\n오영국',\n '_국민대통합당\\n장성민',\n '_늘푸른한국당\\n이재오',\n '_민중연합당\\n김선동',\n '_한국국민당\\n이경희',\n '_홍익당\\n윤홍식',\n '_무소속\\n김민찬',\n '_계',\n '무효투표수_',\n '기권수_']\n\n\n\nrename_dict19 = {\n    '시도명_': '시도',\n    '구시군명_': '구시군',\n    '선거인수_': '선거인수',\n    '투표수_': '투표수',\n    '후보자별 득표수_더불어민주당\\n문재인': '득표수_1_더불어민주당_문재인',\n    '_자유한국당\\n홍준표': '득표수_2_자유한국당_홍준표',\n    '_국민의당\\n안철수': '득표수_3_국민의당_안철수',\n    '_바른정당\\n유승민': '득표수_4_바른정당_유승민',\n    '_정의당\\n심상정': '득표수_5_정의당_심상정',\n    '_새누리당\\n조원진': '득표수_6_새누리당_조원진',\n    '_경제애국당\\n오영국': '득표수_7_경제애국당_오영국',\n    '_국민대통합당\\n장성민': '득표수_8_국민대통합당_장성민',\n    '_늘푸른한국당\\n이재오': '득표수_9_늘푸른한국당_이재오',\n    '_민중연합당\\n김선동': '득표수_10_민중연합당_김선동',\n    '_한국국민당\\n이경희': '득표수_12_한국국민당_이경희',\n    '_홍익당\\n윤홍식': '득표수_14_홍익당_윤홍식',\n    '_무소속\\n김민찬': '득표수_15_무소속_김민찬',\n    '_계': '득표수_계',\n    '무효투표수_': '무효투표수',\n    '기권수_': '기권수'\n}\n\n\ndf_19th.rename(columns=rename_dict19).drop(columns=['읍면동명_','투표구명_'])\n\n\n  \n    \n\n\n\n\n\n\n시도\n구시군\n선거인수\n투표수\n득표수_1_더불어민주당_문재인\n득표수_2_자유한국당_홍준표\n득표수_3_국민의당_안철수\n득표수_4_바른정당_유승민\n득표수_5_정의당_심상정\n득표수_6_새누리당_조원진\n득표수_7_경제애국당_오영국\n득표수_8_국민대통합당_장성민\n득표수_9_늘푸른한국당_이재오\n득표수_10_민중연합당_김선동\n득표수_12_한국국민당_이경희\n득표수_14_홍익당_윤홍식\n득표수_15_무소속_김민찬\n득표수_계\n무효투표수\n기권수\n\n\n\n\n2\n전국\nNaN\n42479710\n32807908\n13423800\n7852849\n6998342\n2208771\n2017458\n42949\n6040\n21709\n9140\n27229\n11355\n18543\n33990\n32672175\n135733\n9671802\n\n\n3\n서울특별시\n합계\n8382999\n6590646\n2781345\n1365285\n1492767\n476973\n425459\n9987\n789\n3554\n1938\n3416\n1277\n2177\n3950\n6568917\n21729\n1792353\n\n\n4\n서울특별시\n종로구\n133769\n102566\n42512\n22325\n22313\n7412\n7113\n228\n5\n78\n31\n63\n26\n47\n49\n102202\n364\n31203\n\n\n86\n서울특별시\n중구\n109836\n82852\n34062\n17901\n19372\n5874\n4993\n158\n12\n53\n21\n55\n18\n25\n51\n82595\n257\n26984\n\n\n165\n서울특별시\n용산구\n197962\n148157\n58081\n35230\n32109\n11825\n9773\n299\n17\n68\n23\n72\n32\n51\n80\n147660\n497\n49805\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n21775\n경상남도\n거창군\n53345\n41325\n11256\n19976\n4923\n2447\n1923\n46\n12\n37\n22\n48\n54\n105\n100\n40949\n376\n12020\n\n\n21825\n경상남도\n합천군\n42887\n33021\n7143\n19699\n3077\n1317\n1065\n37\n23\n26\n16\n28\n51\n153\n76\n32711\n310\n9866\n\n\n21889\n제주특별자치도\n합계\n518000\n374459\n169493\n68063\n77861\n22784\n31716\n385\n269\n312\n113\n335\n236\n289\n556\n372412\n2047\n143541\n\n\n21890\n제주특별자치도\n제주시\n375292\n273163\n125717\n48027\n55971\n16885\n23592\n270\n96\n193\n73\n257\n153\n178\n368\n271780\n1383\n102129\n\n\n22089\n제주특별자치도\n서귀포시\n142708\n101296\n43776\n20036\n21890\n5899\n8124\n115\n173\n119\n40\n78\n83\n111\n188\n100632\n664\n41412\n\n\n\n\n268 rows × 20 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n    \n      \n\n\n    \n        \n    \n\n      \n\n\n\n      \n    \n\n    \n  \n\n\n\ndf_19th = df_19th.rename(columns=rename_dict19).drop(columns=['읍면동명_','투표구명_'])\n\n\ndf_19th[df_19th['구시군'].isna()]\n\n\n  \n    \n\n\n\n\n\n\n시도\n구시군\n선거인수\n투표수\n득표수_1_더불어민주당_문재인\n득표수_2_자유한국당_홍준표\n득표수_3_국민의당_안철수\n득표수_4_바른정당_유승민\n득표수_5_정의당_심상정\n득표수_6_새누리당_조원진\n득표수_7_경제애국당_오영국\n득표수_8_국민대통합당_장성민\n득표수_9_늘푸른한국당_이재오\n득표수_10_민중연합당_김선동\n득표수_12_한국국민당_이경희\n득표수_14_홍익당_윤홍식\n득표수_15_무소속_김민찬\n득표수_계\n무효투표수\n기권수\n\n\n\n\n2\n전국\nNaN\n42479710\n32807908\n13423800\n7852849\n6998342\n2208771\n2017458\n42949\n6040\n21709\n9140\n27229\n11355\n18543\n33990\n32672175\n135733\n9671802\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n    \n  \n\n\n\ndf_19th['구시군'] = df_19th['구시군'].fillna('합계')\n\n\ndf_19th\n\n\n  \n    \n\n\n\n\n\n\n시도\n구시군\n선거인수\n투표수\n득표수_1_더불어민주당_문재인\n득표수_2_자유한국당_홍준표\n득표수_3_국민의당_안철수\n득표수_4_바른정당_유승민\n득표수_5_정의당_심상정\n득표수_6_새누리당_조원진\n득표수_7_경제애국당_오영국\n득표수_8_국민대통합당_장성민\n득표수_9_늘푸른한국당_이재오\n득표수_10_민중연합당_김선동\n득표수_12_한국국민당_이경희\n득표수_14_홍익당_윤홍식\n득표수_15_무소속_김민찬\n득표수_계\n무효투표수\n기권수\n\n\n\n\n2\n전국\n합계\n42479710\n32807908\n13423800\n7852849\n6998342\n2208771\n2017458\n42949\n6040\n21709\n9140\n27229\n11355\n18543\n33990\n32672175\n135733\n9671802\n\n\n3\n서울특별시\n합계\n8382999\n6590646\n2781345\n1365285\n1492767\n476973\n425459\n9987\n789\n3554\n1938\n3416\n1277\n2177\n3950\n6568917\n21729\n1792353\n\n\n4\n서울특별시\n종로구\n133769\n102566\n42512\n22325\n22313\n7412\n7113\n228\n5\n78\n31\n63\n26\n47\n49\n102202\n364\n31203\n\n\n86\n서울특별시\n중구\n109836\n82852\n34062\n17901\n19372\n5874\n4993\n158\n12\n53\n21\n55\n18\n25\n51\n82595\n257\n26984\n\n\n165\n서울특별시\n용산구\n197962\n148157\n58081\n35230\n32109\n11825\n9773\n299\n17\n68\n23\n72\n32\n51\n80\n147660\n497\n49805\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n21775\n경상남도\n거창군\n53345\n41325\n11256\n19976\n4923\n2447\n1923\n46\n12\n37\n22\n48\n54\n105\n100\n40949\n376\n12020\n\n\n21825\n경상남도\n합천군\n42887\n33021\n7143\n19699\n3077\n1317\n1065\n37\n23\n26\n16\n28\n51\n153\n76\n32711\n310\n9866\n\n\n21889\n제주특별자치도\n합계\n518000\n374459\n169493\n68063\n77861\n22784\n31716\n385\n269\n312\n113\n335\n236\n289\n556\n372412\n2047\n143541\n\n\n21890\n제주특별자치도\n제주시\n375292\n273163\n125717\n48027\n55971\n16885\n23592\n270\n96\n193\n73\n257\n153\n178\n368\n271780\n1383\n102129\n\n\n22089\n제주특별자치도\n서귀포시\n142708\n101296\n43776\n20036\n21890\n5899\n8124\n115\n173\n119\n40\n78\n83\n111\n188\n100632\n664\n41412\n\n\n\n\n268 rows × 20 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n    \n      \n\n\n    \n        \n    \n\n      \n\n\n\n      \n    \n\n  \n    \n    \n\n  \n    \n  \n    \n    \n  \n\n    \n  \n\n\n\ndf_19th[df_19th['구시군'] == '합계']\n\n\n  \n    \n\n\n\n\n\n\n시도\n구시군\n선거인수\n투표수\n득표수_1_더불어민주당_문재인\n득표수_2_자유한국당_홍준표\n득표수_3_국민의당_안철수\n득표수_4_바른정당_유승민\n득표수_5_정의당_심상정\n득표수_6_새누리당_조원진\n득표수_7_경제애국당_오영국\n득표수_8_국민대통합당_장성민\n득표수_9_늘푸른한국당_이재오\n득표수_10_민중연합당_김선동\n득표수_12_한국국민당_이경희\n득표수_14_홍익당_윤홍식\n득표수_15_무소속_김민찬\n득표수_계\n무효투표수\n기권수\n\n\n\n\n2\n전국\n합계\n42479710\n32807908\n13423800\n7852849\n6998342\n2208771\n2017458\n42949\n6040\n21709\n9140\n27229\n11355\n18543\n33990\n32672175\n135733\n9671802\n\n\n3\n서울특별시\n합계\n8382999\n6590646\n2781345\n1365285\n1492767\n476973\n425459\n9987\n789\n3554\n1938\n3416\n1277\n2177\n3950\n6568917\n21729\n1792353\n\n\n3226\n부산광역시\n합계\n2950224\n2261633\n872127\n720484\n378907\n162480\n109329\n2651\n276\n1316\n465\n981\n496\n1041\n2156\n2252709\n8924\n688591\n\n\n4623\n대구광역시\n합계\n2043276\n1581347\n342620\n714205\n235757\n198459\n74440\n4057\n259\n563\n324\n804\n401\n986\n1501\n1574376\n6971\n461929\n\n\n5559\n인천광역시\n합계\n2409031\n1820091\n747090\n379191\n428888\n118691\n129925\n2646\n374\n1618\n410\n1230\n594\n625\n1681\n1812963\n7128\n588940\n\n\n6600\n광주광역시\n합계\n1166901\n957321\n583847\n14882\n287222\n20862\n43719\n152\n111\n655\n103\n2265\n136\n264\n614\n954832\n2489\n209580\n\n\n7179\n대전광역시\n합계\n1220602\n945897\n404545\n191376\n218769\n59820\n63669\n1069\n168\n620\n234\n611\n256\n406\n758\n942301\n3596\n274705\n\n\n7719\n울산광역시\n합계\n941093\n744960\n282794\n203602\n128520\n60289\n62187\n829\n128\n575\n240\n641\n220\n411\n926\n741362\n3598\n196133\n\n\n8133\n세종특별자치시\n합계\n189421\n152801\n77767\n23211\n32010\n9192\n9353\n153\n34\n88\n42\n126\n50\n76\n135\n152237\n564\n36620\n\n\n8234\n경기도\n합계\n10262309\n7916009\n3319812\n1637345\n1807308\n540023\n546373\n10778\n1302\n5058\n1858\n6139\n2213\n2883\n6553\n7887645\n28364\n2346300\n\n\n12546\n강원도\n합계\n1287173\n955885\n324768\n284909\n206840\n65278\n62389\n1426\n252\n787\n321\n876\n570\n870\n1350\n950636\n5249\n331288\n\n\n13673\n충청북도\n합계\n1303688\n975441\n374806\n255502\n211454\n57282\n65095\n1153\n308\n722\n421\n840\n686\n943\n1347\n970559\n4882\n328247\n\n\n14533\n충청남도\n합계\n1711912\n1240204\n476661\n306614\n290216\n68521\n83868\n1415\n324\n1148\n429\n1260\n803\n1025\n1662\n1233946\n6258\n471708\n\n\n15758\n전라북도\n합계\n1525626\n1205794\n778747\n40231\n285467\n30802\n59296\n451\n240\n1080\n345\n1186\n499\n589\n2070\n1201003\n4791\n319832\n\n\n16931\n전라남도\n합계\n1572838\n1238738\n737921\n30221\n378179\n25819\n49509\n454\n272\n1319\n315\n3817\n839\n782\n2965\n1232412\n6326\n334100\n\n\n18509\n경상북도\n합계\n2249984\n1711627\n369726\n827237\n253905\n149017\n88080\n3053\n476\n1054\n861\n1308\n1068\n2942\n2499\n1701226\n10401\n538357\n\n\n20251\n경상남도\n합계\n2744633\n2135055\n779731\n790491\n284272\n142479\n113051\n2290\n458\n1240\n721\n1394\n1011\n2234\n3267\n2122639\n12416\n609578\n\n\n21889\n제주특별자치도\n합계\n518000\n374459\n169493\n68063\n77861\n22784\n31716\n385\n269\n312\n113\n335\n236\n289\n556\n372412\n2047\n143541\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n    \n      \n\n\n    \n        \n    \n\n      \n\n\n\n      \n    \n\n    \n  \n\n\n\ndf_19th.to_csv(\"temp1_president_19.csv\", index=False, encoding=\"utf-8-sig\")\n\n\n\n18th_2012\n\n# =============================================================================\n# 18대 대통령선거 데이터 전처리 함수\n# =============================================================================\n\nimport pandas as pd\n\ndef convert_github_url_to_raw(github_url):\n    \"\"\"\n    깃허브 blob URL을 raw URL로 변환\n\n    Parameters:\n    -----------\n    github_url : 깃허브 파일 URL\n\n    Returns:\n    --------\n    raw URL (pandas가 직접 읽을 수 있는 형태)\n\n    Example:\n    --------\n    blob_url = \"https://github.com/user/repo/blob/main/file.xls\"\n    raw_url = convert_github_url_to_raw(blob_url)\n    # \"https://github.com/user/repo/raw/main/file.xls\"\n    \"\"\"\n    if '/blob/' in github_url:\n        return github_url.replace('/blob/', '/raw/')\n    return github_url\n\n\ndef process_18th_presidential_election(file_path):\n    \"\"\"\n    18대 대통령선거 데이터 전처리 함수\n\n    엑셀 파일 구조:\n    - 0~2행: 메타 정보 (무시)\n    - 3행: 헤더 첫 번째 줄 (시도명, 구시군명 등)\n    - 4행: 헤더 두 번째 줄 (후보자명, 득표수 등)\n    - 5행부터: 실제 데이터\n\n    특별한 필터링 로직:\n    - '합계' 행: 모두 포함\n    - '소계' 행: 구시군별로 첫 번째만 포함 (중복 제거)\n\n    Parameters:\n    -----------\n    file_path : 파일 경로 (로컬 파일, 깃허브 blob URL, 또는 raw URL)\n        - 로컬: \"./data/18대_선거결과.xls\"\n        - 깃허브 blob: \"https://github.com/user/repo/blob/main/파일.xls\" (자동 변환됨)\n        - 깃허브 raw: \"https://github.com/user/repo/raw/main/파일.xls\"\n\n    Returns:\n    --------\n    전처리된 선거 데이터 (pandas DataFrame, 합계 및 소계 행만 포함)\n\n    Example:\n    --------\n    # 깃허브에서 불러오기 (blob URL 그대로 사용 - 자동 변환됨)\n    blob_url = \"https://github.com/user/repo/blob/main/18대/선거결과.xls\"\n    df = process_18th_presidential_election(blob_url)\n\n    # 로컬 파일 불러오기\n    df = process_18th_presidential_election(\"./data/18대_선거결과.xls\")\n    \"\"\"\n\n    # ================================\n    # 1. 파일 로드 (자동 감지)\n    # ================================\n    if file_path.startswith(('http://', 'https://')):\n        # URL인 경우 - blob URL이면 raw URL로 변환\n        raw_url = convert_github_url_to_raw(file_path)\n        print(f\"웹에서 파일 로드: {raw_url}\")\n        if raw_url != file_path:\n            print(f\"  (blob URL을 raw URL로 자동 변환)\")\n        df_all = pd.read_excel(raw_url, header=None)\n    else:\n        # 로컬 파일인 경우\n        print(f\"로컬에서 파일 로드: {file_path}\")\n        df_all = pd.read_excel(file_path, header=None)\n\n    print(f\"원본 데이터 크기: {df_all.shape}\")\n\n    # ================================\n    # 2. 헤더 구성 (3행 + 4행 병합)\n    # ================================\n    # 파이썬 인덱스는 0부터 시작하므로:\n    # 3행 = iloc[3] (실제 4번째 행)\n    # 4행 = iloc[4] (실제 5번째 행)\n    header_row_1 = df_all.iloc[3].fillna(\"\")  # 시도명, 구시군명 등\n    header_row_2 = df_all.iloc[4].fillna(\"\")  # 후보자명, 득표수 등\n    combined_headers = header_row_1.astype(str) + \"_\" + header_row_2.astype(str)\n\n    # ================================\n    # 3. 실제 데이터 추출 (5행부터)\n    # ================================\n    # 5행 = iloc[5] (실제 6번째 행)부터 데이터 시작\n    df_data = df_all.iloc[5:].copy()\n    df_data.columns = combined_headers\n\n    print(f\"데이터 추출 후 크기: {df_data.shape}\")\n    print(f\"컬럼 수: {len(df_data.columns)}\")\n\n    # ================================\n    # 4. 주요 컬럼 추출\n    # ================================\n    gugun_column = [col for col in df_data.columns if \"구시군명\" in col][0]\n    dong_column = [col for col in df_data.columns if \"읍면동명\" in col][0]\n\n    print(f\"주요 컬럼:\")\n    print(f\"  - 구시군: {gugun_column}\")\n    print(f\"  - 읍면동: {dong_column}\")\n\n    # ================================\n    # 5. 고급 필터링 (합계 + 소계 첫 번째)\n    # ================================\n    # 18대는 특별한 필터링 로직이 필요함\n\n    # 5-1. 합계 행 찾기\n    is_total = df_data[gugun_column].astype(str).str.contains(\"합계\", na=False)\n\n    # 5-2. 소계 행 찾기\n    is_subtotal = df_data[dong_column].astype(str).str.contains(\"소계\", na=False)\n\n    # 5-3. 소계 중에서 구시군별로 첫 번째만 선택\n    # (동일한 구시군에 여러 소계가 있을 경우 중복 제거)\n    subtotal_first_idx = (\n        df_data[is_subtotal]\n        .groupby(df_data[gugun_column])  # 구시군별로 그룹화\n        .head(1)                        # 각 그룹의 첫 번째만 선택\n        .index                          # 인덱스 추출\n    )\n\n    # 5-4. 합계 인덱스와 소계 첫 번째 인덱스 결합\n    total_idx = is_total[is_total].index      # 합계 행들의 인덱스\n    final_idx = total_idx.union(subtotal_first_idx)  # 두 인덱스 합집합\n\n    # 5-5. 원래 순서 유지하며 필터링된 행들만 추출\n    df_filtered = df_data.loc[final_idx].copy()\n\n    print(f\"필터링 후 크기: {df_filtered.shape}\")\n    print(f\"  - 합계 행: {len(total_idx)}개\")\n    print(f\"  - 소계 행 (첫 번째만): {len(subtotal_first_idx)}개\")\n\n    # ================================\n    # 6. 수치형 컬럼 정리\n    # ================================\n    # 4번째 컬럼(인덱스 4)부터는 보통 득표수 등 수치 데이터\n    numeric_columns = df_filtered.columns[4:]\n\n    print(f\"수치형 컬럼 개수: {len(numeric_columns)}\")\n\n    for col in numeric_columns:\n        # 쉼표 제거 → 공백 제거 → 빈값을 0으로 → 정수형 변환\n        df_filtered[col] = (\n            df_filtered[col]\n            .astype(str)           # 문자열로 변환\n            .fillna(\"0\")           # NaN 값을 \"0\" 문자열로 변경\n            .str.replace(\",\", \"\")  # 천 단위 구분자 제거 (예: \"1,234\" → \"1234\")\n            .str.strip()           # 앞뒤 공백 제거\n            .replace(\"nan\", \"0\")   # 'nan' 문자열을 \"0\"으로 변경\n            .replace(\"\", \"0\")      # 빈 문자열을 \"0\"으로 변경\n            .astype(int)           # 최종적으로 정수형으로 변환\n        )\n\n    # ================================\n    # 7. 결과 반환\n    # ================================\n    print(f\"최종 데이터 크기: {df_filtered.shape}\")\n    print(\"전처리 완료!\")\n\n    return df_filtered\n\n\n# =============================================================================\n# 사용 예시\n# =============================================================================\n\n# 깃허브 blob URL로 불러오는 경우 (자동으로 raw URL로 변환됨)\n# blob_url = \"https://github.com/~~/korean-elections/blob/main/original/Presidential_Elections/18th_2012/제18대 대통령선거 개표자료.xls\"\n# df_18th = process_18th_presidential_election(blob_url)\n\n# 로컬에서 불러오는 경우\n# df_18th = process_18th_presidential_election(\"./data/18대_대선결과.xls\")\n\n# 업로드된 파일 사용하는 경우\n# df_18th = process_18th_presidential_election(\"제18대 대통령선거 개표자료.xls\")\n\n# 결과 확인\n# print(df_18th.head())\n# print(df_18th.columns.tolist())\n\n\n# 깃허브 blob URL로 불러오는 경우 (자동으로 raw URL로 변환됨)\nblob_url18 = \"https://github.com/sw1kwon/korean-elections/blob/main/original/Presidential_Elections/18th_2012/%EC%A0%9C18%EB%8C%80%20%EB%8C%80%ED%86%B5%EB%A0%B9%EC%84%A0%EA%B1%B0%20%EA%B0%9C%ED%91%9C%EC%9E%90%EB%A3%8C.xls\"\ndf_18th = process_18th_presidential_election(blob_url18)\n\n웹에서 파일 로드: https://github.com/sw1kwon/korean-elections/raw/main/original/Presidential_Elections/18th_2012/%EC%A0%9C18%EB%8C%80%20%EB%8C%80%ED%86%B5%EB%A0%B9%EC%84%A0%EA%B1%B0%20%EA%B0%9C%ED%91%9C%EC%9E%90%EB%A3%8C.xls\n  (blob URL을 raw URL로 자동 변환)\n원본 데이터 크기: (18127, 16)\n데이터 추출 후 크기: (18122, 16)\n컬럼 수: 16\n주요 컬럼:\n  - 구시군: 구시군명_\n  - 읍면동: 읍면동명_\n필터링 후 크기: (246, 16)\n  - 합계 행: 18개\n  - 소계 행 (첫 번째만): 228개\n수치형 컬럼 개수: 12\n최종 데이터 크기: (246, 16)\n전처리 완료!\n\n\n\ndf_18th\n\n\n  \n    \n\n\n\n\n\n\n_\n시도명_\n구시군명_\n읍면동명_\n투표구명_\n선거인수_\n투표수_\n후보자별 득표수_새누리당\\n박근혜\n_민주통합당\\n문재인\n_무소속\\n박종선\n_무소속\\n김소연\n_무소속\\n강지원\n_무소속\\n김순자\n_계\n무효\\n투표수_\n기권수_\n\n\n\n\n5\nNaN\n전국\n합계\nNaN\n0\n40507842\n30721459\n15773128\n14692632\n12854\n16687\n53303\n46017\n30594621\n126838\n9786383\n\n\n6\nNaN\n서울특별시\n합계\nNaN\n0\n8393847\n6307869\n3024572\n3227639\n3559\n3793\n11829\n5307\n6276699\n31170\n2085978\n\n\n7\nNaN\n서울특별시\n종로구\n소계\n0\n141447\n103189\n49422\n52747\n73\n86\n211\n97\n102636\n553\n38258\n\n\n71\nNaN\n서울특별시\n중구\n소계\n0\n115277\n83095\n40289\n41919\n67\n56\n151\n71\n82553\n542\n32182\n\n\n136\nNaN\n서울특별시\n용산구\n소계\n0\n206665\n147849\n76997\n69572\n87\n96\n261\n121\n147134\n715\n58816\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n17763\nNaN\n경상남도\n거창군\n소계\n0\n51773\n40103\n28726\n10466\n61\n22\n75\n244\n39594\n509\n11670\n\n\n17801\nNaN\n경상남도\n합천군\n소계\n0\n43981\n33586\n25313\n7114\n70\n20\n64\n382\n32963\n623\n10395\n\n\n17848\nNaN\n제주특별자치도\n합계\nNaN\n0\n451731\n330967\n166184\n161235\n148\n240\n667\n861\n329335\n1632\n120764\n\n\n17849\nNaN\n제주특별자치도\n제주시\n소계\n0\n328450\n241552\n119563\n119622\n94\n164\n473\n570\n240486\n1066\n86898\n\n\n18018\nNaN\n제주특별자치도\n서귀포시\n소계\n0\n123281\n89415\n46621\n41613\n54\n76\n194\n291\n88849\n566\n33866\n\n\n\n\n246 rows × 16 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n    \n      \n\n\n    \n        \n    \n\n      \n\n\n\n      \n    \n\n  \n    \n    \n\n  \n    \n  \n    \n    \n  \n\n    \n  \n\n\n\ndf_18th.columns.tolist()\n\n['_',\n '시도명_',\n '구시군명_',\n '읍면동명_',\n '투표구명_',\n '선거인수_',\n '투표수_',\n '후보자별 득표수_새누리당\\n박근혜',\n '_민주통합당\\n문재인',\n '_무소속\\n박종선',\n '_무소속\\n김소연',\n '_무소속\\n강지원',\n '_무소속\\n김순자',\n '_계',\n '무효\\n투표수_',\n '기권수_']\n\n\n\nrename_dict18 = {\n    '시도명_': '시도',\n    '구시군명_': '구시군',\n    '선거인수_': '선거인수',\n    '투표수_': '투표수',\n    '후보자별 득표수_새누리당\\n박근혜': '득표수_1_새누리당_박근혜',\n    '_민주통합당\\n문재인': '득표수_2_민주통합당_문재인',\n    '_무소속\\n박종선': '득표수_4_무소속_박종선',\n    '_무소속\\n김소연': '득표수_5_무소속_김소연',\n    '_무소속\\n강지원': '득표수_6_무소속_강지원',\n    '_무소속\\n김순자': '득표수_7_무소속_김순자',\n    '_계': '득표수_계',\n    '무효\\n투표수_': '무효투표수',\n    '기권수_': '기권수'\n}\n\n\ndf_18th.rename(columns=rename_dict18).drop(columns=['_','읍면동명_','투표구명_'])\n\n\n  \n    \n\n\n\n\n\n\n시도\n구시군\n선거인수\n투표수\n득표수_1_새누리당_박근혜\n득표수_2_민주통합당_문재인\n득표수_4_무소속_박종선\n득표수_5_무소속_김소연\n득표수_6_무소속_강지원\n득표수_7_무소속_김순자\n득표수_계\n무효투표수\n기권수\n\n\n\n\n5\n전국\n합계\n40507842\n30721459\n15773128\n14692632\n12854\n16687\n53303\n46017\n30594621\n126838\n9786383\n\n\n6\n서울특별시\n합계\n8393847\n6307869\n3024572\n3227639\n3559\n3793\n11829\n5307\n6276699\n31170\n2085978\n\n\n7\n서울특별시\n종로구\n141447\n103189\n49422\n52747\n73\n86\n211\n97\n102636\n553\n38258\n\n\n71\n서울특별시\n중구\n115277\n83095\n40289\n41919\n67\n56\n151\n71\n82553\n542\n32182\n\n\n136\n서울특별시\n용산구\n206665\n147849\n76997\n69572\n87\n96\n261\n121\n147134\n715\n58816\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n17763\n경상남도\n거창군\n51773\n40103\n28726\n10466\n61\n22\n75\n244\n39594\n509\n11670\n\n\n17801\n경상남도\n합천군\n43981\n33586\n25313\n7114\n70\n20\n64\n382\n32963\n623\n10395\n\n\n17848\n제주특별자치도\n합계\n451731\n330967\n166184\n161235\n148\n240\n667\n861\n329335\n1632\n120764\n\n\n17849\n제주특별자치도\n제주시\n328450\n241552\n119563\n119622\n94\n164\n473\n570\n240486\n1066\n86898\n\n\n18018\n제주특별자치도\n서귀포시\n123281\n89415\n46621\n41613\n54\n76\n194\n291\n88849\n566\n33866\n\n\n\n\n246 rows × 13 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n    \n      \n\n\n    \n        \n    \n\n      \n\n\n\n      \n    \n\n    \n  \n\n\n\ndf_18th = df_18th.rename(columns=rename_dict18).drop(columns=['_','읍면동명_','투표구명_'])\n\n\ndf_18th[df_18th['구시군'] == '합계']\n\n\n  \n    \n\n\n\n\n\n\n시도\n구시군\n선거인수\n투표수\n득표수_1_새누리당_박근혜\n득표수_2_민주통합당_문재인\n득표수_4_무소속_박종선\n득표수_5_무소속_김소연\n득표수_6_무소속_강지원\n득표수_7_무소속_김순자\n득표수_계\n무효투표수\n기권수\n\n\n\n\n5\n전국\n합계\n40507842\n30721459\n15773128\n14692632\n12854\n16687\n53303\n46017\n30594621\n126838\n9786383\n\n\n6\n서울특별시\n합계\n8393847\n6307869\n3024572\n3227639\n3559\n3793\n11829\n5307\n6276699\n31170\n2085978\n\n\n2780\n부산광역시\n합계\n2911700\n2219699\n1324159\n882511\n555\n913\n2878\n2389\n2213405\n6294\n692001\n\n\n3938\n대구광역시\n합계\n1990746\n1585806\n1267789\n309034\n366\n624\n2043\n1984\n1581840\n3966\n404940\n\n\n4706\n인천광역시\n합계\n2241366\n1657821\n852600\n794213\n508\n1005\n2730\n1910\n1652966\n4855\n583545\n\n\n5551\n광주광역시\n합계\n1117781\n898416\n69574\n823737\n268\n333\n1113\n561\n895586\n2830\n219365\n\n\n6020\n대전광역시\n합계\n1182321\n904367\n450576\n448310\n271\n461\n1291\n969\n901878\n2489\n277954\n\n\n6466\n울산광역시\n합계\n886061\n694938\n413977\n275451\n210\n434\n898\n1463\n692433\n2505\n191123\n\n\n6812\n세종특별자치시\n합계\n87707\n64990\n33587\n30787\n31\n38\n99\n155\n64697\n293\n22717\n\n\n6866\n경기도\n합계\n9364077\n7018577\n3528915\n3442084\n1997\n3674\n12577\n7476\n6996723\n21854\n2345500\n\n\n10405\n강원도\n합계\n1235647\n911988\n562876\n340870\n356\n524\n1514\n2114\n908254\n3734\n323659\n\n\n11320\n충청북도\n합계\n1234832\n925778\n518442\n398907\n410\n542\n1511\n2241\n922053\n3725\n309054\n\n\n11996\n충청남도\n합계\n1601751\n1168095\n658928\n497630\n516\n688\n1976\n3198\n1162936\n5159\n433656\n\n\n12977\n전라북도\n합계\n1483402\n1142133\n150315\n980322\n480\n702\n3066\n1690\n1136575\n5558\n341269\n\n\n13895\n전라남도\n합계\n1530012\n1171210\n116296\n1038347\n732\n759\n4338\n2487\n1162959\n8251\n358802\n\n\n15156\n경상북도\n합계\n2185987\n1710122\n1375164\n316659\n810\n873\n2119\n5886\n1701511\n8611\n475865\n\n\n16543\n경상남도\n합계\n2608874\n2008683\n1259174\n724896\n1637\n1084\n2654\n5326\n1994771\n13912\n600191\n\n\n17848\n제주특별자치도\n합계\n451731\n330967\n166184\n161235\n148\n240\n667\n861\n329335\n1632\n120764\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n    \n      \n\n\n    \n        \n    \n\n      \n\n\n\n      \n    \n\n    \n  \n\n\n\ndf_18th.to_csv(\"temp1_president_18.csv\", index=False, encoding=\"utf-8-sig\")"
  }
]